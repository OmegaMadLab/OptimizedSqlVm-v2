{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
       "type": "string",
       "metadata": {
            "description": "The Azure location where resources are created"
        },
       "defaultValue": "[resourceGroup().location]"
    },
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "The name for the Virtual Machine"
      }
    },
    "createAvailabilitySet": {
      "type": "string",
      "defaultValue": "No",
      "allowedValues": [
        "Yes",
        "No"
      ],
      "metadata": {
        "description": "Choose Yes to create a new availability set, or No to use an existing one"
      }
    },
    "availabilitySetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the availability set. Leave empty if availability set is not needed"
      }
    },
    "adDomain": {
      "type": "string",
      "minLength": 0,
      "maxLength": 15,
      "defaultValue": "",
      "metadata": {
        "description": "DNS name of the AD domain you want to join. Leave empty if you don't want to join a domain during provisioning"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username for the Virtual Machine. If a domain is specified in the appropriate parameter, this user will be used both for local admin and to join domain"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password for the Virtual Machine"
      }
    },
    "vnetName": {
      "type": "string",
      "minLength": 0,
      "maxLength": 100,
      "defaultValue": "",
      "metadata": {
        "description": "The vnet you want to connect to. Leave empty to create a new ad hoc virtual network"
      }
    },
    "vnetResourceGroup": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "If using an existing vnet, specify the name of resource group which contains it. Otherwise, leave it empty"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "default",
      "metadata": {
        "description": "The subnet you want to connect to"
      }
    },
    "privateIp": {
      "type": "string",
      "defaultValue": "dhcp",
      "metadata": {
        "description": "The private IP address you want to assign to the NIC; leave DHCP to maintain a dynamic IP"
      }
    },
    "enableAcceleratedNetworking": {
      "type": "string",
      "defaultValue": "No",
      "allowedValues": [
        "Yes",
        "No"
      ],
      "metadata": {
        "description": "Would you like to enable accelerated networking? It works only on supported VMs"
      }
    },
    "enablePublicIP": {
      "type": "string",
      "defaultValue": "No",
      "allowedValues": [
        "Yes",
        "No"
      ],
      "metadata": {
        "description": "Link a public IP address to the NIC?"
      }
    },
    "dnsLabelPrefix": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "If public IP address is enabled, choose a unique DNS Name to access the Virtual Machine."
      }
    },
    "asgIds": {
      "type": "array",
      "minLength": 0,
      "maxLength": 100,
      "defaultValue": "[json('null')]",
      "metadata": {
        "description": "The array of application security group ids you want to join. Leave empty to skip this step."
      }
    },
    "sqlVersion": {
      "type": "string",
      "defaultValue": "SQL Server 2017 Developer (free) on Windows Server 2016",
      "allowedValues": [
        "SQL Server 2012 SP3 Enterprise on Windows Server 2012 R2",
        "SQL Server 2012 SP3 Enterprise (BYOL) on Windows Server 2012 R2",
        "SQL Server 2012 SP3 Standard on Windows Server 2012 R2",
        "SQL Server 2012 SP3 Standard (BYOL) on Windows Server 2012 R2",
        "SQL Server 2012 SP3 Web on Windows Server 2012 R2",
        "SQL Server 2012 SP3 Express on Windows Server 2012 R2",
        "SQL Server 2012 SP4 Enterprise on Windows Server 2012 R2",
        "SQL Server 2012 SP4 Enterprise (BYOL) on Windows Server 2012 R2",
        "SQL Server 2012 SP4 Standard on Windows Server 2012 R2",
        "SQL Server 2012 SP4 Standard (BYOL) on Windows Server 2012 R2",
        "SQL Server 2012 SP4 Web on Windows Server 2012 R2",
        "SQL Server 2012 SP4 Express on Windows Server 2012 R2",
        "SQL Server 2014 SP1 Enterprise (BYOL) on Windows Server 2012 R2",
        "SQL Server 2014 SP1 Standard (BYOL) on Windows Server 2012 R2",
        "SQL Server 2014 SP2 Enterprise on Windows Server 2012 R2",
        "SQL Server 2014 SP2 Enterprise (BYOL) on Windows Server 2012 R2",
        "SQL Server 2014 SP2 Standard on Windows Server 2012 R2",
        "SQL Server 2014 SP2 Standard (BYOL) on Windows Server 2012 R2",
        "SQL Server 2014 SP2 Web on Windows Server 2012 R2",
        "SQL Server 2014 SP2 Express on Windows Server 2012 R2",
        "SQL Server 2016 Enterprise (BYOL) on Windows Server 2012 R2",
        "SQL Server 2016 Standard (BYOL) on Windows Server 2012 R2",
        "SQL Server 2016 Developer (free) on Windows Server 2012 R2",
        "SQL Server 2016 SP1 Enterprise on Windows Server 2016",
        "SQL Server 2016 SP1 Enterprise (BYOL) on Windows Server 2016",
        "SQL Server 2016 SP1 Standard on Windows Server 2016",
        "SQL Server 2016 SP1 Standard (BYOL) on Windows Server 2016",
        "SQL Server 2016 SP1 Web on Windows Server 2016",
        "SQL Server 2016 SP1 Express (free) on Windows Server 2016",
        "SQL Server 2016 SP1 Developer (free) on Windows Server 2016",
        "SQL Server 2017 Enterprise on Windows Server 2016",
        "SQL Server 2017 Enterprise (BYOL) on Windows Server 2016",
        "SQL Server 2017 Standard on Windows Server 2016",
        "SQL Server 2017 Standard (BYOL) on Windows Server 2016",
        "SQL Server 2017 Web on Windows Server 2016",
        "SQL Server 2017 Express (free) on Windows Server 2016",
        "SQL Server 2017 Developer (free) on Windows Server 2016",
        "SQL Server 2017 Enterprise on Windows Server 2019",
        "SQL Server 2017 Enterprise (BYOL) on Windows Server 2019",
        "SQL Server 2017 Standard on Windows Server 2019",
        "SQL Server 2017 Standard (BYOL) on Windows Server 2019",
        "SQL Server 2017 Web on Windows Server 2019",
        "SQL Server 2017 Express (free) on Windows Server 2019",
        "SQL Server 2017 Developer (free) on Windows Server 2019",
        "SQL Server 2019 Enterprise on Windows Server 2019",
        "SQL Server 2019 Enterprise (BYOL) on Windows Server 2019",
        "SQL Server 2019 Standard on Windows Server 2019",
        "SQL Server 2019 Standard (BYOL) on Windows Server 2019",
        "SQL Server 2019 Web on Windows Server 2019",
        "SQL Server 2019 Express (free) on Windows Server 2019",
        "SQL Server 2019 Developer (free) on Windows Server 2019"
       ],
       "metadata": {
            "description": "The SQL Server version you want to deploy"
          }
        },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_DS2_v2",
      "metadata": {
        "description": "The size of the virtual machine"
      },
      "allowedValues": [
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_D11_v2",
        "Standard_D12_v2",
        "Standard_D13_v2",
        "Standard_D14_v2",
        "Standard_F2",
        "Standard_F4",
        "Standard_F8",
        "Standard_F16",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_DS11_v2",
        "Standard_DS12-2_v2",
        "Standard_DS12_v2",
        "Standard_DS13-2_v2",
        "Standard_DS13-4_v2",
        "Standard_DS13_v2",
        "Standard_DS14-4_v2",
        "Standard_DS14-8_v2",
        "Standard_DS14_v2",
        "Standard_F2s",
        "Standard_F4s",
        "Standard_F8s",
        "Standard_F16s",
        "Standard_A2m_v2",
        "Standard_A2_v2",
        "Standard_A4m_v2",
        "Standard_A4_v2",
        "Standard_A8m_v2",
        "Standard_A8_v2",
        "Standard_D2_v3",
        "Standard_D4_v3",
        "Standard_D8_v3",
        "Standard_D16_v3",
        "Standard_D32_v3",
        "Standard_D48_v3",
        "Standard_D64_v3",
        "Standard_D2s_v3",
        "Standard_D4s_v3",
        "Standard_D8s_v3",
        "Standard_D16s_v3",
        "Standard_D32s_v3",
        "Standard_D48s_v3",
        "Standard_D64s_v3",
        "Standard_E2_v3",
        "Standard_E4_v3",
        "Standard_E8_v3",
        "Standard_E16_v3",
        "Standard_E20_v3",
        "Standard_E32_v3",
        "Standard_E2s_v3",
        "Standard_E4-2s_v3",
        "Standard_E4s_v3",
        "Standard_E8-2s_v3",
        "Standard_E8-4s_v3",
        "Standard_E8s_v3",
        "Standard_E16-4s_v3",
        "Standard_E16-8s_v3",
        "Standard_E16s_v3",
        "Standard_E20s_v3",
        "Standard_E32-8s_v3",
        "Standard_E32-16s_v3",
        "Standard_E32s_v3",
        "Standard_M8-2ms",
        "Standard_M8-4ms",
        "Standard_M8ms",
        "Standard_M16-4ms",
        "Standard_M16-8ms",
        "Standard_M16ms",
        "Standard_M32-8ms",
        "Standard_M32-16ms",
        "Standard_M32ls",
        "Standard_M32ms",
        "Standard_M32ts",
        "Standard_M64-16ms ",
        "Standard_M64-32ms",
        "Standard_M64ls",
        "Standard_M64ms",
        "Standard_M64s",
        "Standard_M128-32ms",
        "Standard_M128-64ms",
        "Standard_M128ms",
        "Standard_M128s",
        "Standard_M64",
        "Standard_M64m",
        "Standard_M128",
        "Standard_M128m",
        "Standard_A2",
        "Standard_A3",
        "Standard_A5",
        "Standard_A4",
        "Standard_A6",
        "Standard_A7",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_D14",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_PB6s",
        "Standard_D15_v2",
        "Standard_DS15_v2",
        "Standard_E48_v3",
        "Standard_E64i_v3",
        "Standard_E64_v3",
        "Standard_E48s_v3",
        "Standard_E64-16s_v3",
        "Standard_E64-32s_v3",
        "Standard_E64is_v3",
        "Standard_E64s_v3",
        "Standard_F2s_v2",
        "Standard_F4s_v2",
        "Standard_F8s_v2",
        "Standard_F16s_v2",
        "Standard_F32s_v2",
        "Standard_F48s_v2",
        "Standard_F64s_v2",
        "Standard_F72s_v2",
        "Standard_L8s_v2",
        "Standard_L16s_v2",
        "Standard_L32s_v2",
        "Standard_L48s_v2",
        "Standard_L64s_v2",
        "Standard_L80s_v2",
        "Standard_HB120rs_v2",
        "Standard_M24ms_v2 ",
        "Standard_M24s_v2",
        "Standard_M48ms_v2",
        "Standard_M48s_v2",
        "Standard_M96ms_v2",
        "Standard_M96s_v2",
        "Standard_M192ms_v2",
        "Standard_M192s_v2",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS4-4",
        "Standard_GS4-8",
        "Standard_GS5",
        "Standard_GS5-8",
        "Standard_GS5-16",
        "Standard_L4s",
        "Standard_L8s",
        "Standard_L16s",
        "Standard_L32s",
        "Standard_H8",
        "Standard_H8_Promo ",
        "Standard_H16",
        "Standard_H16_Promo",
        "Standard_H8m",
        "Standard_H8m_Promo",
        "Standard_H16m",
        "Standard_H16m_Promo",
        "Standard_H16r",
        "Standard_H16r_Promo",
        "Standard_H16mr",
        "Standard_H16mr_Promo",
        "Standard_M208ms_v2",
        "Standard_M208s_v2",
        "Standard_M416s_v2",
        "Standard_M416ms_v2",
        "Standard_HC44rs",
        "Standard_D2a_v4",
        "Standard_D4a_v4",
        "Standard_D8a_v4",
        "Standard_D16a_v4",
        "Standard_D32a_v4",
        "Standard_D48a_v4",
        "Standard_D64a_v4",
        "Standard_D96a_v4",
        "Standard_D2as_v4",
        "Standard_D4as_v4",
        "Standard_D8as_v4",
        "Standard_D16as_v4",
        "Standard_D32as_v4",
        "Standard_D48as_v4",
        "Standard_D64as_v4",
        "Standard_D96as_v4 ",
        "Standard_E2a_v4",
        "Standard_E4a_v4",
        "Standard_E8a_v4",
        "Standard_E16a_v4",
        "Standard_E20a_v4",
        "Standard_E32a_v4",
        "Standard_E48a_v4",
        "Standard_E64a_v4",
        "Standard_E96a_v4",
        "Standard_E2as_v4",
        "Standard_E4as_v4",
        "Standard_E8as_v4",
        "Standard_E16as_v4",
        "Standard_E20as_v4",
        "Standard_E32as_v4",
        "Standard_E48as_v4",
        "Standard_E64as_v4",
        "Standard_E96as_v4",
        "Standard_E2d_v4",
        "Standard_E4d_v4",
        "Standard_E8d_v4",
        "Standard_E16d_v4",
        "Standard_E20d_v4",
        "Standard_E32d_v4",
        "Standard_E48d_v4",
        "Standard_E64d_v4",
        "Standard_E2ds_v4",
        "Standard_E4-2ds_v4",
        "Standard_E4ds_v4",
        "Standard_E8-2ds_v4",
        "Standard_E8-4ds_v4",
        "Standard_E8ds_v4",
        "Standard_E16-4ds_v4",
        "Standard_E16-8ds_v4",
        "Standard_E16ds_v4",
        "Standard_E20ds_v4",
        "Standard_E32-8ds_v4",
        "Standard_E32-16ds_v4",
        "Standard_E32ds_v4",
        "Standard_E48ds_v4",
        "Standard_E64-16ds_v4",
        "Standard_E64ds_v4",
        "Standard_D2d_v4",
        "Standard_D4d_v4",
        "Standard_D8d_v4",
        "Standard_D16d_v4",
        "Standard_D32d_v4",
        "Standard_D48d_v4",
        "Standard_D64d_v4",
        "Standard_D2ds_v4",
        "Standard_D4ds_v4",
        "Standard_D8ds_v4",
        "Standard_D16ds_v4",
        "Standard_D32ds_v4",
        "Standard_D48ds_v4",
        "Standard_D64ds_v4",
        "Standard_A8",
        "Standard_A9",
        "Standard_A10",
        "Standard_A11"
      ]
    },
    "useAHBforWindows": {
      "type": "string",
      "allowedValues": [
        "Yes",
        "No"
      ],
      "defaultValue": "No",
      "metadata": {
        "description": "Would you like to active Azure Hybrid Benefits and use an existing Windows license on this VM?"
      }
    },
    "timeZone": {
      "type": "string",
      "allowedValues": [
        "(UTC-12:00) International Date Line West",
        "(UTC-11:00) Coordinated Universal Time-11",
        "(UTC-10:00) Aleutian Islands",
        "(UTC-10:00) Hawaii",
        "(UTC-09:30) Marquesas Islands",
        "(UTC-09:00) Alaska",
        "(UTC-09:00) Coordinated Universal Time-09",
        "(UTC-08:00) Baja California",
        "(UTC-08:00) Coordinated Universal Time-08",
        "(UTC-08:00) Pacific Time (US & Canada)",
        "(UTC-07:00) Arizona",
        "(UTC-07:00) Chihuahua, La Paz, Mazatlan",
        "(UTC-07:00) Mountain Time (US & Canada)",
        "(UTC-06:00) Central America",
        "(UTC-06:00) Central Time (US & Canada)",
        "(UTC-06:00) Easter Island",
        "(UTC-06:00) Guadalajara, Mexico City, Monterrey",
        "(UTC-06:00) Saskatchewan",
        "(UTC-05:00) Bogota, Lima, Quito, Rio Branco",
        "(UTC-05:00) Chetumal",
        "(UTC-05:00) Eastern Time (US & Canada)",
        "(UTC-05:00) Haiti",
        "(UTC-05:00) Havana",
        "(UTC-05:00) Indiana (East)",
        "(UTC-05:00) Turks and Caicos",
        "(UTC-04:00) Asuncion",
        "(UTC-04:00) Atlantic Time (Canada)",
        "(UTC-04:00) Caracas",
        "(UTC-04:00) Cuiaba",
        "(UTC-04:00) Georgetown, La Paz, Manaus, San Juan",
        "(UTC-04:00) Santiago",
        "(UTC-03:30) Newfoundland",
        "(UTC-03:00) Araguaina",
        "(UTC-03:00) Brasilia",
        "(UTC-03:00) Cayenne, Fortaleza",
        "(UTC-03:00) City of Buenos Aires",
        "(UTC-03:00) Greenland",
        "(UTC-03:00) Montevideo",
        "(UTC-03:00) Punta Arenas",
        "(UTC-03:00) Saint Pierre and Miquelon",
        "(UTC-03:00) Salvador",
        "(UTC-02:00) Coordinated Universal Time-02",
        "(UTC-02:00) Mid-Atlantic - Old",
        "(UTC-01:00) Azores",
        "(UTC-01:00) Cabo Verde Is.",
        "(UTC) Coordinated Universal Time",
        "(UTC+00:00) Casablanca",
        "(UTC+00:00) Dublin, Edinburgh, Lisbon, London",
        "(UTC+00:00) Monrovia, Reykjavik",
        "(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna",
        "(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague",
        "(UTC+01:00) Brussels, Copenhagen, Madrid, Paris",
        "(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb",
        "(UTC+01:00) West Central Africa",
        "(UTC+02:00) Amman",
        "(UTC+02:00) Athens, Bucharest",
        "(UTC+02:00) Beirut",
        "(UTC+02:00) Cairo",
        "(UTC+02:00) Chisinau",
        "(UTC+02:00) Damascus",
        "(UTC+02:00) Gaza, Hebron",
        "(UTC+02:00) Harare, Pretoria",
        "(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius",
        "(UTC+02:00) Jerusalem",
        "(UTC+02:00) Kaliningrad",
        "(UTC+02:00) Khartoum",
        "(UTC+02:00) Tripoli",
        "(UTC+02:00) Windhoek",
        "(UTC+03:00) Baghdad",
        "(UTC+03:00) Istanbul",
        "(UTC+03:00) Kuwait, Riyadh",
        "(UTC+03:00) Minsk",
        "(UTC+03:00) Moscow, St. Petersburg, Volgograd",
        "(UTC+03:00) Nairobi",
        "(UTC+03:30) Tehran",
        "(UTC+04:00) Abu Dhabi, Muscat",
        "(UTC+04:00) Astrakhan, Ulyanovsk",
        "(UTC+04:00) Baku",
        "(UTC+04:00) Izhevsk, Samara",
        "(UTC+04:00) Port Louis",
        "(UTC+04:00) Saratov",
        "(UTC+04:00) Tbilisi",
        "(UTC+04:00) Yerevan",
        "(UTC+04:30) Kabul",
        "(UTC+05:00) Ashgabat, Tashkent",
        "(UTC+05:00) Ekaterinburg",
        "(UTC+05:00) Islamabad, Karachi",
        "(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi",
        "(UTC+05:30) Sri Jayawardenepura",
        "(UTC+05:45) Kathmandu",
        "(UTC+06:00) Astana",
        "(UTC+06:00) Dhaka",
        "(UTC+06:00) Omsk",
        "(UTC+06:30) Yangon (Rangoon)",
        "(UTC+07:00) Bangkok, Hanoi, Jakarta",
        "(UTC+07:00) Barnaul, Gorno-Altaysk",
        "(UTC+07:00) Hovd",
        "(UTC+07:00) Krasnoyarsk",
        "(UTC+07:00) Novosibirsk",
        "(UTC+07:00) Tomsk",
        "(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi",
        "(UTC+08:00) Irkutsk",
        "(UTC+08:00) Kuala Lumpur, Singapore",
        "(UTC+08:00) Perth",
        "(UTC+08:00) Taipei",
        "(UTC+08:00) Ulaanbaatar",
        "(UTC+08:30) Pyongyang",
        "(UTC+08:45) Eucla",
        "(UTC+09:00) Chita",
        "(UTC+09:00) Osaka, Sapporo, Tokyo",
        "(UTC+09:00) Seoul",
        "(UTC+09:00) Yakutsk",
        "(UTC+09:30) Adelaide",
        "(UTC+09:30) Darwin",
        "(UTC+10:00) Brisbane",
        "(UTC+10:00) Canberra, Melbourne, Sydney",
        "(UTC+10:00) Guam, Port Moresby",
        "(UTC+10:00) Hobart",
        "(UTC+10:00) Vladivostok",
        "(UTC+10:30) Lord Howe Island",
        "(UTC+11:00) Bougainville Island",
        "(UTC+11:00) Chokurdakh",
        "(UTC+11:00) Magadan",
        "(UTC+11:00) Norfolk Island",
        "(UTC+11:00) Sakhalin",
        "(UTC+11:00) Solomon Is., New Caledonia",
        "(UTC+12:00) Anadyr, Petropavlovsk-Kamchatsky",
        "(UTC+12:00) Auckland, Wellington",
        "(UTC+12:00) Coordinated Universal Time+12",
        "(UTC+12:00) Fiji",
        "(UTC+12:00) Petropavlovsk-Kamchatsky - Old",
        "(UTC+12:45) Chatham Islands",
        "(UTC+13:00) Coordinated Universal Time+13",
        "(UTC+13:00) Nuku'alofa",
        "(UTC+13:00) Samoa",
        "(UTC+14:00) Kiritimati Island"
      ],
      "defaultValue": "(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna",
      "metadata": {
        "description": "Choose the time zone for the virtual machine"
      }
    },
    "osDiskSuffix": {
      "type": "string",
      "defaultValue": "OsDisk",
      "metadata": {
        "description": "Suffix that will be used to compose OS disk name"
      }
    },
    "osDiskStorageSku": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "StandardSSD_LRS",
        "Premium_LRS"
      ],
      "defaultValue": "Premium_LRS",
      "metadata": {
        "description": "The type of storage to use for OS disk"
      }
    },
    "AdditionalDiskSuffix": {
      "type": "string",
      "defaultValue": "DataDisk",
      "metadata": {
        "description": "Suffix that will be used to compose additional disk name"
      }
    },
    "workloadType": {
      "type": "string",
      "allowedValues": [
        "OLTP","DW","Generic"
      ],
      "defaultValue": "OLTP",
      "metadata": {
        "description": "The workload type which will be executed on this VM"
      }
    },
    "dataDiskStorageSku": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "StandardSSD_LRS",
        "Premium_LRS",
        "UltraSSD_LRS"
      ],
      "defaultValue": "Premium_LRS",
      "metadata": {
        "description": "The type of storage to use"
      }
    },
    "#ofDataDisks": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "The number of data disks to add to the virtual machine"
      }
    },
    "dataDisksSize": {
      "type": "int",
      "defaultValue": 1023,
      "metadata": {
        "description": "The size of data disks to add to the virtual machine"
      }
    },
    "logDiskStorageSku": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "StandardSSD_LRS",
        "Premium_LRS",
        "UltraSSD_LRS"
      ],
      "defaultValue": "Premium_LRS",
      "metadata": {
        "description": "The type of storage to use for Log Disks"
      }
    },
    "#ofLogDisks": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "The number of log disks to add to the virtual machine"
      }
    },
    "logDisksSize": {
      "type": "int",
      "defaultValue": 1023,
      "metadata": {
        "description": "The size of log disks to add to the virtual machine"
      }
    },
    "#ofAdditionalDisks": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "The number of additional disks to add to the virtual machine"
      }
    },
    "additionalDisksSize": {
      "type": "int",
      "defaultValue": 1023,
      "metadata": {
        "description": "The size of additional disks to add to the virtual machine"
      }
    },
    "dataFilePath": {
      "type": "string",
      "defaultValue": "F:\\SQLData",
      "metadata": {
        "description": "The path for data files"
      }
    },
    "logFilePath": {
      "type": "string",
      "defaultValue": "G:\\SQLLog",
      "metadata": {
        "description": "The path for log files"
      }
    },
    "tempFilePath": {
      "type": "string",
      "defaultValue": "D:\\TempDB",
      "metadata": {
        "description": "The path for TempDB files"
      }
    },
    "sqlTcpPort": {
      "type": "int",
      "defaultValue": 1433,
      "metadata": {
        "description": "The TCP Port for the SQL Server instance"
      }
    },
    "sqlAuthAdmin": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "Description": "To enable SQL Authentication, provide an admin username. Avoid sa, sysadmin, admin and similar accounts. If left empty, SQL Auth won't be enabled"
      }
    },
    "sqlAuthAdminPassword": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "Description": "SQL Authentication syadmin password. Evaluated only if sqlAuthAdmin parameter is populated"
      }
    },
    "sqlRpInstallMode": {
      "type": "string",
      "defaultValue": "Full",
      "allowedValues": [
        "Full",
        "LightWeight",
        "NoAgent"
      ],
      "metadata": {
        "Description": "SQL VM Resource Provider installation mode. If prepareForHA parameter is set to FCI, this parameter is ignored and SQL VM RP mode is automatically set to LightWeight"
      }
    },
    "prepareForHA": {
      "type": "string",
      "defaultValue": "No",
      "allowedValues": [
        "No",
        "AG",
        "FCI"
      ],
      "metadata": {
        "Description": "Set to Yes if this VM will be part of a SQL Failover Cluster Instance. This will remove default SQL instance and install Failover Cluster related Windows features."
      }
    },
    "diagStorageAccountName": {
      "type": "string",
      "minLength": 0,
      "maxLength": 25,
      "defaultValue": "",
      "metadata": {
        "description": "The name of the storage account to use for diagnostic logs. If it doesn't exist, it will be created. Leave it empty to use a default value based on VM name."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "Location of resources that the script is dependent on such as linked templates and DSC modules"
      },
      "defaultValue": "https://raw.githubusercontent.com/OmegaMadLab/OptimizedSqlVm-v2/master"
    }
  },
  "variables": {
    "storageAccountName": "[if(equals(length(parameters('diagStorageAccountName')), 0), take(concat(uniquestring('diag', toLower(parameters('vmName')), resourceGroup().id)), 25), parameters('diagStorageAccountName'))]",
    "storageSku": "Standard_LRS",
    "nicName": "[concat(parameters('vmName'),'-NIC')]",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "[if(equals(length(parameters('subnetName')), 0), 'default', parameters('subnetName'))]",
    "subnetPrefix": "10.0.0.0/24",
    "publicIPAddressName": "[concat(parameters('vmName'),'-PublicIP')]",
    "publicIpAllocationMethod": "Dynamic",
    "vnetResourceGroupName": "[if(equals(length(parameters('vnetResourceGroup')), 0), resourceGroup().name, parameters('vnetResourceGroup'))]",
    "virtualNetworkName": "[if(equals(length(parameters('vnetName')), 0), concat(parameters('vmName'),'-Vnet'), parameters('vnetName'))]",
    "vnetID": "[resourceId(variables('vnetResourceGroupName'), 'Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/', toLower(variables('subnetName')))]",
    "DataDiskCacheSetting": "[if(or(equals(parameters('dataDiskstorageSku'), 'Premium_LRS'),equals(parameters('dataDiskstorageSku'), 'StandardSSD_LRS')), 'ReadOnly', 'None')]",
    "LogDiskCacheSetting": "None",
    "AdditionalDiskCacheSetting": "None",
    "AdditionalDiskStorageSku": "Standard_LRS",
    "#ofDisks": "[add(add(parameters('#ofDataDisks'), parameters('#ofLogDisks')), parameters('#ofAdditionalDisks'))]",
    "sqlLicense": "[if(contains(parameters('sqlVersion'), 'BYOL'), 'AHUB', 'PAYG')]",
    "copy": [
      {
          "name": "dataDisks",
          "count": "[variables('#ofDisks')]",
          "input": {
              "name": "[concat(parameters('vmName'), '-', parameters('AdditionalDiskSuffix'), string(CopyIndex('dataDisks', 1)))]",
              "diskSizeGB": "[if(less(copyIndex('dataDisks'), parameters('#ofDataDisks')), parameters('DataDisksSize'), if(less(copyIndex('dataDisks'), add(parameters('#ofDataDisks'), parameters('#ofLogDisks'))), parameters('LogDisksSize'), parameters('additionalDisksSize')))]",
              "lun": "[int(copyIndex('dataDisks'))]",
              "caching": "[if(less(copyIndex('dataDisks'), parameters('#ofDataDisks')), variables('DataDiskCacheSetting'), if(less(copyIndex('dataDisks'), add(parameters('#ofDataDisks'), parameters('#ofLogDisks'))), variables('LogDiskCacheSetting'), variables('AdditionalDiskCacheSetting')))]",
              "createOption": "Empty",
              "managedDisk": {
                "storageAccountType": "[if(less(copyIndex('dataDisks'), parameters('#ofDataDisks')), parameters('dataDiskstorageSku'), if(less(copyIndex('dataDisks'), add(parameters('#ofDataDisks'), parameters('#ofLogDisks'))), parameters('logDiskstorageSku'), variables('AdditionalDiskStorageSku')))]"
              }
          }
      },
      {
          "name": "asgIds",
          "count": "[length(parameters('asgIds'))]",
          "input": {
              "id": "[parameters('asgIds')[CopyIndex('asgIds')]]"
          }
      }
    ],    
    "NestedTemplateFolder": "nestedtemplates",
    "NetworkTemplateFileName": "Network.json",
    "StorageTemplateFileName": "Storage.json",
    "PublicIPTemplateFileName": "PublicIP.json",
    "AvSetTemplateFileName": "AvSet.json",
    "TimeZoneObj": {
      "(UTC-12:00) International Date Line West": { "id": "Dateline Standard Time" },
      "(UTC-11:00) Coordinated Universal Time-11": { "id": "UTC-11" },
      "(UTC-10:00) Aleutian Islands": { "id": "Aleutian Standard Time" },
      "(UTC-10:00) Hawaii": { "id": "Hawaiian Standard Time" },
      "(UTC-09:30) Marquesas Islands": { "id": "Marquesas Standard Time" },
      "(UTC-09:00) Alaska": { "id": "Alaskan Standard Time" },
      "(UTC-09:00) Coordinated Universal Time-09": { "id": "UTC-09" },
      "(UTC-08:00) Baja California": { "id": "Pacific Standard Time (Mexico)" },
      "(UTC-08:00) Coordinated Universal Time-08": { "id": "UTC-08" },
      "(UTC-08:00) Pacific Time (US & Canada)": { "id": "Pacific Standard Time" },
      "(UTC-07:00) Arizona": { "id": "US Mountain Standard Time" },
      "(UTC-07:00) Chihuahua, La Paz, Mazatlan": { "id": "Mountain Standard Time (Mexico)" },
      "(UTC-07:00) Mountain Time (US & Canada)": { "id": "Mountain Standard Time" },
      "(UTC-06:00) Central America": { "id": "Central America Standard Time" },
      "(UTC-06:00) Central Time (US & Canada)": { "id": "Central Standard Time" },
      "(UTC-06:00) Easter Island": { "id": "Easter Island Standard Time" },
      "(UTC-06:00) Guadalajara, Mexico City, Monterrey": { "id": "Central Standard Time (Mexico)" },
      "(UTC-06:00) Saskatchewan": { "id": "Canada Central Standard Time" },
      "(UTC-05:00) Bogota, Lima, Quito, Rio Branco": { "id": "SA Pacific Standard Time" },
      "(UTC-05:00) Chetumal": { "id": "Eastern Standard Time (Mexico)" },
      "(UTC-05:00) Eastern Time (US & Canada)": { "id": "Eastern Standard Time" },
      "(UTC-05:00) Haiti": { "id": "Haiti Standard Time" },
      "(UTC-05:00) Havana": { "id": "Cuba Standard Time" },
      "(UTC-05:00) Indiana (East)": { "id": "US Eastern Standard Time" },
      "(UTC-05:00) Turks and Caicos": { "id": "Turks And Caicos Standard Time" },
      "(UTC-04:00) Asuncion": { "id": "Paraguay Standard Time" },
      "(UTC-04:00) Atlantic Time (Canada)": { "id": "Atlantic Standard Time" },
      "(UTC-04:00) Caracas": { "id": "Venezuela Standard Time" },
      "(UTC-04:00) Cuiaba": { "id": "Central Brazilian Standard Time" },
      "(UTC-04:00) Georgetown, La Paz, Manaus, San Juan": { "id": "SA Western Standard Time" },
      "(UTC-04:00) Santiago": { "id": "Pacific SA Standard Time" },
      "(UTC-03:30) Newfoundland": { "id": "Newfoundland Standard Time" },
      "(UTC-03:00) Araguaina": { "id": "Tocantins Standard Time" },
      "(UTC-03:00) Brasilia": { "id": "E. South America Standard Time" },
      "(UTC-03:00) Cayenne, Fortaleza": { "id": "SA Eastern Standard Time" },
      "(UTC-03:00) City of Buenos Aires": { "id": "Argentina Standard Time" },
      "(UTC-03:00) Greenland": { "id": "Greenland Standard Time" },
      "(UTC-03:00) Montevideo": { "id": "Montevideo Standard Time" },
      "(UTC-03:00) Punta Arenas": { "id": "Magallanes Standard Time" },
      "(UTC-03:00) Saint Pierre and Miquelon": { "id": "Saint Pierre Standard Time" },
      "(UTC-03:00) Salvador": { "id": "Bahia Standard Time" },
      "(UTC-02:00) Coordinated Universal Time-02": { "id": "UTC-02" },
      "(UTC-02:00) Mid-Atlantic - Old": { "id": "Mid-Atlantic Standard Time" },
      "(UTC-01:00) Azores": { "id": "Azores Standard Time" },
      "(UTC-01:00) Cabo Verde Is.": { "id": "Cape Verde Standard Time" },
      "(UTC) Coordinated Universal Time": { "id": "UTC" },
      "(UTC+00:00) Casablanca": { "id": "Morocco Standard Time" },
      "(UTC+00:00) Dublin, Edinburgh, Lisbon, London": { "id": "GMT Standard Time" },
      "(UTC+00:00) Monrovia, Reykjavik": { "id": "Greenwich Standard Time" },
      "(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna": { "id": "W. Europe Standard Time" },
      "(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague": { "id": "Central Europe Standard Time" },
      "(UTC+01:00) Brussels, Copenhagen, Madrid, Paris": { "id": "Romance Standard Time" },
      "(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb": { "id": "Central European Standard Time" },
      "(UTC+01:00) West Central Africa": { "id": "W. Central Africa Standard Time" },
      "(UTC+02:00) Amman": { "id": "Jordan Standard Time" },
      "(UTC+02:00) Athens, Bucharest": { "id": "GTB Standard Time" },
      "(UTC+02:00) Beirut": { "id": "Middle East Standard Time" },
      "(UTC+02:00) Cairo": { "id": "Egypt Standard Time" },
      "(UTC+02:00) Chisinau": { "id": "E. Europe Standard Time" },
      "(UTC+02:00) Damascus": { "id": "Syria Standard Time" },
      "(UTC+02:00) Gaza, Hebron": { "id": "West Bank Standard Time" },
      "(UTC+02:00) Harare, Pretoria": { "id": "South Africa Standard Time" },
      "(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius": { "id": "FLE Standard Time" },
      "(UTC+02:00) Jerusalem": { "id": "Israel Standard Time" },
      "(UTC+02:00) Kaliningrad": { "id": "Kaliningrad Standard Time" },
      "(UTC+02:00) Khartoum": { "id": "Sudan Standard Time" },
      "(UTC+02:00) Tripoli": { "id": "Libya Standard Time" },
      "(UTC+02:00) Windhoek": { "id": "Namibia Standard Time" },
      "(UTC+03:00) Baghdad": { "id": "Arabic Standard Time" },
      "(UTC+03:00) Istanbul": { "id": "Turkey Standard Time" },
      "(UTC+03:00) Kuwait, Riyadh": { "id": "Arab Standard Time" },
      "(UTC+03:00) Minsk": { "id": "Belarus Standard Time" },
      "(UTC+03:00) Moscow, St. Petersburg, Volgograd": { "id": "Russian Standard Time" },
      "(UTC+03:00) Nairobi": { "id": "E. Africa Standard Time" },
      "(UTC+03:30) Tehran": { "id": "Iran Standard Time" },
      "(UTC+04:00) Abu Dhabi, Muscat": { "id": "Arabian Standard Time" },
      "(UTC+04:00) Astrakhan, Ulyanovsk": { "id": "Astrakhan Standard Time" },
      "(UTC+04:00) Baku": { "id": "Azerbaijan Standard Time" },
      "(UTC+04:00) Izhevsk, Samara": { "id": "Russia Time Zone 3" },
      "(UTC+04:00) Port Louis": { "id": "Mauritius Standard Time" },
      "(UTC+04:00) Saratov": { "id": "Saratov Standard Time" },
      "(UTC+04:00) Tbilisi": { "id": "Georgian Standard Time" },
      "(UTC+04:00) Yerevan": { "id": "Caucasus Standard Time" },
      "(UTC+04:30) Kabul": { "id": "Afghanistan Standard Time" },
      "(UTC+05:00) Ashgabat, Tashkent": { "id": "West Asia Standard Time" },
      "(UTC+05:00) Ekaterinburg": { "id": "Ekaterinburg Standard Time" },
      "(UTC+05:00) Islamabad, Karachi": { "id": "Pakistan Standard Time" },
      "(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi": { "id": "India Standard Time" },
      "(UTC+05:30) Sri Jayawardenepura": { "id": "Sri Lanka Standard Time" },
      "(UTC+05:45) Kathmandu": { "id": "Nepal Standard Time" },
      "(UTC+06:00) Astana": { "id": "Central Asia Standard Time" },
      "(UTC+06:00) Dhaka": { "id": "Bangladesh Standard Time" },
      "(UTC+06:00) Omsk": { "id": "Omsk Standard Time" },
      "(UTC+06:30) Yangon (Rangoon)": { "id": "Myanmar Standard Time" },
      "(UTC+07:00) Bangkok, Hanoi, Jakarta": { "id": "SE Asia Standard Time" },
      "(UTC+07:00) Barnaul, Gorno-Altaysk": { "id": "Altai Standard Time" },
      "(UTC+07:00) Hovd": { "id": "W. Mongolia Standard Time" },
      "(UTC+07:00) Krasnoyarsk": { "id": "North Asia Standard Time" },
      "(UTC+07:00) Novosibirsk": { "id": "N. Central Asia Standard Time" },
      "(UTC+07:00) Tomsk": { "id": "Tomsk Standard Time" },
      "(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi": { "id": "China Standard Time" },
      "(UTC+08:00) Irkutsk": { "id": "North Asia East Standard Time" },
      "(UTC+08:00) Kuala Lumpur, Singapore": { "id": "Singapore Standard Time" },
      "(UTC+08:00) Perth": { "id": "W. Australia Standard Time" },
      "(UTC+08:00) Taipei": { "id": "Taipei Standard Time" },
      "(UTC+08:00) Ulaanbaatar": { "id": "Ulaanbaatar Standard Time" },
      "(UTC+08:30) Pyongyang": { "id": "North Korea Standard Time" },
      "(UTC+08:45) Eucla": { "id": "Aus Central W. Standard Time" },
      "(UTC+09:00) Chita": { "id": "Transbaikal Standard Time" },
      "(UTC+09:00) Osaka, Sapporo, Tokyo": { "id": "Tokyo Standard Time" },
      "(UTC+09:00) Seoul": { "id": "Korea Standard Time" },
      "(UTC+09:00) Yakutsk": { "id": "Yakutsk Standard Time" },
      "(UTC+09:30) Adelaide": { "id": "Cen. Australia Standard Time" },
      "(UTC+09:30) Darwin": { "id": "AUS Central Standard Time" },
      "(UTC+10:00) Brisbane": { "id": "E. Australia Standard Time" },
      "(UTC+10:00) Canberra, Melbourne, Sydney": { "id": "AUS Eastern Standard Time" },
      "(UTC+10:00) Guam, Port Moresby": { "id": "West Pacific Standard Time" },
      "(UTC+10:00) Hobart": { "id": "Tasmania Standard Time" },
      "(UTC+10:00) Vladivostok": { "id": "Vladivostok Standard Time" },
      "(UTC+10:30) Lord Howe Island": { "id": "Lord Howe Standard Time" },
      "(UTC+11:00) Bougainville Island": { "id": "Bougainville Standard Time" },
      "(UTC+11:00) Chokurdakh": { "id": "Russia Time Zone 10" },
      "(UTC+11:00) Magadan": { "id": "Magadan Standard Time" },
      "(UTC+11:00) Norfolk Island": { "id": "Norfolk Standard Time" },
      "(UTC+11:00) Sakhalin": { "id": "Sakhalin Standard Time" },
      "(UTC+11:00) Solomon Is., New Caledonia": { "id": "Central Pacific Standard Time" },
      "(UTC+12:00) Anadyr, Petropavlovsk-Kamchatsky": { "id": "Russia Time Zone 11" },
      "(UTC+12:00) Auckland, Wellington": { "id": "New Zealand Standard Time" },
      "(UTC+12:00) Coordinated Universal Time+12": { "id": "UTC+12" },
      "(UTC+12:00) Fiji": { "id": "Fiji Standard Time" },
      "(UTC+12:00) Petropavlovsk-Kamchatsky - Old": { "id": "Kamchatka Standard Time" },
      "(UTC+12:45) Chatham Islands": { "id": "Chatham Islands Standard Time" },
      "(UTC+13:00) Coordinated Universal Time+13": { "id": "UTC+13" },
      "(UTC+13:00) Nuku'alofa": { "id": "Tonga Standard Time" },
      "(UTC+13:00) Samoa": { "id": "Samoa Standard Time" },
      "(UTC+14:00) Kiritimati Island": { "id": "Line Islands Standard Time" }
    },
    "sqlVersionObj": {
      "SQL Server 2012 SP3 Enterprise on Windows Server 2012 R2": {
        "offer": "SQL2012SP3-WS2012R2",
        "sku": "Enterprise"
      },
      "SQL Server 2012 SP3 Enterprise (BYOL) on Windows Server 2012 R2": {
        "offer": "SQL2012SP3-WS2012R2-BYOL",
        "sku": "Enterprise"
      },
      "SQL Server 2012 SP3 Standard on Windows Server 2012 R2": {
        "offer": "SQL2012SP3-WS2012R2",
        "sku": "Standard"
      },
      "SQL Server 2012 SP3 Standard (BYOL) on Windows Server 2012 R2": {
        "offer": "SQL2012SP3-WS2012R2-BYOL",
        "sku": "Standard"
      },
      "SQL Server 2012 SP3 Web on Windows Server 2012 R2": {
        "offer": "SQL2012SP3-WS2012R2",
        "sku": "Web"
      },
      "SQL Server 2012 SP3 Express on Windows Server 2012 R2": {
        "offer": "SQL2012SP3-WS2012R2",
        "sku": "Express"
      },
      "SQL Server 2012 SP4 Enterprise on Windows Server 2012 R2": {
        "offer": "SQL2012SP4-WS2012R2",
        "sku": "Enterprise"
      },
      "SQL Server 2012 SP4 Enterprise (BYOL) on Windows Server 2012 R2": {
        "offer": "SQL2012SP4-WS2012R2-BYOL",
        "sku": "Enterprise"
      },
      "SQL Server 2012 SP4 Standard on Windows Server 2012 R2": {
        "offer": "SQL2012SP4-WS2012R2",
        "sku": "Standard"
      },
      "SQL Server 2012 SP4 Standard (BYOL) on Windows Server 2012 R2": {
        "offer": "SQL2012SP4-WS2012R2-BYOL",
        "sku": "Standard"
      },
      "SQL Server 2012 SP4 Web on Windows Server 2012 R2": {
        "offer": "SQL2012SP4-WS2012R2",
        "sku": "Web"
      },
      "SQL Server 2012 SP4 Express on Windows Server 2012 R2": {
        "offer": "SQL2012SP4-WS2012R2",
        "sku": "Express"
      },
      "SQL Server 2014 SP1 Enterprise (BYOL) on Windows Server 2012 R2": {
        "offer": "SQL2014SP1-WS2012R2-BYOL",
        "sku": "Enterprise"
      },
      "SQL Server 2014 SP1 Standard (BYOL) on Windows Server 2012 R2": {
        "offer": "SQL2014SP1-WS2012R2-BYOL",
        "sku": "Standard"
      },
      "SQL Server 2014 SP2 Enterprise on Windows Server 2012 R2": {
        "offer": "SQL2014SP2-WS2012R2",
        "sku": "Enterprise"
      },
      "SQL Server 2014 SP2 Enterprise (BYOL) on Windows Server 2012 R2": {
        "offer": "SQL2014SP2-WS2012R2-BYOL",
        "sku": "Enterprise"
      },
      "SQL Server 2014 SP2 Standard on Windows Server 2012 R2": {
        "offer": "SQL2014SP2-WS2012R2",
        "sku": "Standard"
      },
      "SQL Server 2014 SP2 Standard (BYOL) on Windows Server 2012 R2": {
        "offer": "SQL2014SP2-WS2012R2-BYOL",
        "sku": "Standard"
      },
      "SQL Server 2014 SP2 Web on Windows Server 2012 R2": {
        "offer": "SQL2014SP2-WS2012R2",
        "sku": "Web"
      },
      "SQL Server 2014 SP2 Express on Windows Server 2012 R2": {
        "offer": "SQL2014SP2-WS2012R2",
        "sku": "Express"
      },
      "SQL Server 2016 Enterprise (BYOL) on Windows Server 2012 R2": {
        "offer": "SQL2016-WS2012R2-BYOL",
        "sku": "Enterprise"
      },
      "SQL Server 2016 Standard (BYOL) on Windows Server 2012 R2": {
        "offer": "SQL2016-WS2012R2-BYOL",
        "sku": "Standard"
      },
      "SQL Server 2016 Developer (free) on Windows Server 2012 R2": {
        "offer": "SQL2016-WS2012R2",
        "sku": "SQLDEV"
      },
      "SQL Server 2016 SP1 Enterprise on Windows Server 2016": {
        "offer": "SQL2016SP1-WS2016",
        "sku": "Enterprise"
      },
      "SQL Server 2016 SP1 Enterprise (BYOL) on Windows Server 2016": {
        "offer": "SQL2016SP1-WS2016-BYOL",
        "sku": "Enterprise"
      },
      "SQL Server 2016 SP1 Standard on Windows Server 2016": {
        "offer": "SQL2016SP1-WS2016",
        "sku": "Standard"
      },
      "SQL Server 2016 SP1 Standard (BYOL) on Windows Server 2016": {
        "offer": "SQL2016SP1-WS2016-BYOL",
        "sku": "Standard"
      },
      "SQL Server 2016 SP1 Web on Windows Server 2016": {
        "offer": "SQL2016SP1-WS2016",
        "sku": "Web"
      },
      "SQL Server 2016 SP1 Express (free) on Windows Server 2016": {
        "offer": "SQL2016SP1-WS2016",
        "sku": "Express"
      },
      "SQL Server 2016 SP1 Developer (free) on Windows Server 2016": {
        "offer": "SQL2016SP1-WS2016",
        "sku": "SQLDEV"
      },
      "SQL Server 2017 Enterprise on Windows Server 2016": {
        "offer": "SQL2017-WS2016",
        "sku": "Enterprise"
      },
      "SQL Server 2017 Enterprise (BYOL) on Windows Server 2016": {
        "offer": "SQL2017-WS2016-BYOL",
        "sku": "Enterprise"
      },
      "SQL Server 2017 Standard on Windows Server 2016": {
        "offer": "SQL2017-WS2016",
        "sku": "Standard"
      },
      "SQL Server 2017 Standard (BYOL) on Windows Server 2016": {
        "offer": "SQL2017-WS2016-BYOL",
        "sku": "Standard"
      },
      "SQL Server 2017 Web on Windows Server 2016": {
        "offer": "SQL2017-WS2016",
        "sku": "Web"
      },
      "SQL Server 2017 Express (free) on Windows Server 2016": {
        "offer": "SQL2017-WS2016",
        "sku": "Express"
      },
      "SQL Server 2017 Developer (free) on Windows Server 2016": {
        "offer": "SQL2017-WS2016",
        "sku": "SQLDEV"
      },
      "SQL Server 2017 Enterprise on Windows Server 2019": {
        "offer": "SQL2017-WS2019",
        "sku": "Enterprise"
      },
      "SQL Server 2017 Enterprise (BYOL) on Windows Server 2019": {
        "offer": "SQL2017-WS2019-BYOL",
        "sku": "Enterprise"
      },
      "SQL Server 2017 Standard on Windows Server 2019": {
        "offer": "SQL2017-WS2019",
        "sku": "Standard"
      },
      "SQL Server 2017 Standard (BYOL) on Windows Server 2019": {
        "offer": "SQL2017-WS2019-BYOL",
        "sku": "Standard"
      },
      "SQL Server 2017 Web on Windows Server 2019": {
        "offer": "SQL2017-WS2019",
        "sku": "Web"
      },
      "SQL Server 2017 Express (free) on Windows Server 2019": {
        "offer": "SQL2017-WS2019",
        "sku": "Express"
      },
      "SQL Server 2017 Developer (free) on Windows Server 2019": {
        "offer": "SQL2017-WS2019",
        "sku": "SQLDEV"
      },
      "SQL Server 2019 Enterprise on Windows Server 2019": {
        "offer": "SQL2019-WS2019",
        "sku": "Enterprise"
      },
      "SQL Server 2019 Enterprise (BYOL) on Windows Server 2019": {
        "offer": "SQL2019-WS2019-BYOL",
        "sku": "Enterprise"
      },
      "SQL Server 2019 Standard on Windows Server 2019": {
        "offer": "SQL2019-WS2019",
        "sku": "Standard"
      },
      "SQL Server 2019 Standard (BYOL) on Windows Server 2019": {
        "offer": "SQL2019-WS2019-BYOL",
        "sku": "Standard"
      },
      "SQL Server 2019 Web on Windows Server 2019": {
        "offer": "SQL2019-WS2019",
        "sku": "Web"
      },
      "SQL Server 2019 Express (free) on Windows Server 2019": {
        "offer": "SQL2019-WS2019",
        "sku": "Express"
      },
      "SQL Server 2019 Developer (free) on Windows Server 2019": {
        "offer": "SQL2019-WS2019",
        "sku": "SQLDEV"
      }
    },
    "sqlAuthUid": "[parameters('sqlAuthAdmin')]",
    "sqlAuthPwd": "[if(equals(parameters('sqlAuthAdmin'), ''), '', parameters('sqlAuthAdminPassword'))]",
    "sqlConfigModulesURL": "[concat(parameters('_artifactsLocation'), '/DSC/SqlDscConfig.zip')]",
    "SqlDscConfigScript": "SqlDscConfig.ps1",
    "SqlDscConfigFunction": "SqlDscConfig",
    "sqlRpInstallMode": "[if(equals(toLower(parameters('prepareForHA')), 'FCI'), 'LightWeight', parameters('sqlRpInstallMode'))]",
    "rpStorageConfigurationSettings": {
      "DiskConfigurationType": "NEW",
      "StorageWorkloadType": "[parameters('workloadType')]", 
      "SQLDataSettings": {
          "LUNs": "[array(range(0 ,parameters('#ofDataDisks')))]",
          "DefaultFilePath": "[parameters('dataFilePath')]"
      },
      "SQLLogSettings": {
          "Luns": "[array(range(parameters('#ofDataDisks'), parameters('#ofLogDisks')))]",
          "DefaultFilePath": "[parameters('logFilePath')]"
      },
      "SQLTempDbSettings": {
          "DefaultFilePath": "[parameters('tempFilePath')]"
      }
    },
    "rpServerConfigurationsManagementSettings": {
      "sqlConnectivityUpdateSettings": {
        "port": "[parameters('sqlTcpPort')]",
        "sqlAuthUpdateUserName": "[variables('sqlAuthUid')]",
        "sqlAuthUpdatePassword": "[variables('sqlAuthPwd')]"
      }
    }
  },
  "resources": [
    {
      "name": "Network",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "condition": "[equals(length(parameters('vnetName')), 0)]",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/', variables('NestedTemplateFolder'), '/', variables('NetworkTemplateFileName'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "vnetName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "addressPrefix": {
            "value": "[variables('addressPrefix')]"
          },
          "subnetName": {
            "value": "[variables('subnetName')]"
          },
          "subnetPrefix": {
            "value": "[variables('subnetPrefix')]"
          }
        }
      }
    },
    {
      "name": "Storage",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "condition": "[equals(length(parameters('diagStorageAccountName')), 0)]",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/', variables('NestedTemplateFolder'), '/', variables('StorageTemplateFileName'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          },
          "storageSku": {
            "value": "[variables('storageSku')]"
          }
        }
      }
    },
    {
      "name": "AvSet",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "condition": "[and(greater(length(parameters('availabilitySetName')), 0),equals(toLower(parameters('createAvailabilitySet')), 'yes'))]",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/', variables('NestedTemplateFolder'), '/', variables('AvSetTemplateFileName'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "avSetName": {
            "value": "[parameters('availabilitySetName')]"
          },
          "ppgId": {
            "value": ""
          }
        }
      }
    },
    {
      "name": "PublicIP",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "condition": "[equals(parameters('enablePublicIP'), 'Yes')]",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/', variables('NestedTemplateFolder'), '/', variables('PublicIPTemplateFileName'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "name": {
            "value": "[variables('publicIPAddressName')]"
          },
          "ipAllocationMethod": {
            "value": "[variables('publicIpAllocationMethod')]"
          },
          "domainNameLabel": {
            "value": "[parameters('dnsLabelPrefix')]"
          }
        }
      }
    },
    {
      "apiVersion": "2019-09-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments/', 'Network')]",
        "[resourceId('Microsoft.Resources/deployments/', 'PublicIP')]"
      ],
      "tags": {
        "displayName": "Nic"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "[if(equals(tolower(parameters('privateIP')), 'dhcp'), 'Dynamic', 'Static')]",
              "privateIPAddress": "[if(equals(tolower(parameters('privateIP')), 'dhcp'), json('null'), parameters('privateIP'))]",
              "publicIPAddress": "[if(equals(tolower(parameters('enablePublicIP')), 'no'), json('null'), json(concat('{\"id\": \"/subscriptions/', subscription().subscriptionId, '/resourceGroups/',toLower(resourceGroup().name), '/providers/Microsoft.Network/publicIPAddresses/', toLower(variables('publicIPAddressName')), '\"}')))]",
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "applicationSecurityGroups": "[variables('asgIds')]"
            }
          }
        ],
        "enableAcceleratedNetworking": "[if(equals(tolower(parameters('enableAcceleratedNetworking')), 'yes'), bool('true'), bool('false'))]"
      }
    },
    {
      "apiVersion": "2019-03-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]",
        "[resourceId('Microsoft.Resources/deployments/', 'Storage')]",
        "[resourceId('Microsoft.Resources/deployments/', 'AvSet')]"
      ],
      "tags": {
        "displayName": "VM"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "licenseType": "[if(equals(toLower(parameters('useAHBforWindows')), 'yes'), 'Windows_Server', 'None')]",
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "timeZone": "[variables('TimeZoneObj')[parameters('TimeZone')].id]"
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftSqlServer",
            "offer": "[variables('sqlVersionObj')[parameters('sqlVersion')].offer]",
            "sku": "[variables('sqlVersionObj')[parameters('sqlVersion')].sku]",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "createOption": "FromImage",
            "name": "[concat(parameters('vmName'), '-', parameters('OsDiskSuffix'))]",
            "managedDisk": {
              "storageAccountType": "[parameters('OsDiskStorageSku')]"
            }
          },
          "dataDisks": "[variables('dataDisks')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('https://', variables('storageAccountName'), '.blob.core.windows.net/')]"
          }
        },
        "availabilitySet": "[if(equals(length(parameters('availabilitySetName')), 0), json('null'), json(concat('{\"id\": \"/subscriptions/', subscription().subscriptionId, '/resourceGroups/',toLower(resourceGroup().name), '/providers/Microsoft.Compute/availabilitySets/', toLower(parameters('availabilitySetName')), '\"}')))]"
      },
      "resources": []
    },
    {
      "type": "Microsoft.SqlVirtualMachine/SqlVirtualMachines",
      "apiVersion": "2017-03-01-preview",
      "name": "[parameters('vmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
          "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
      ],
      "tags": {
        "displayName": "SQLVMRP"
      },
      "properties": {
          "virtualMachineResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]",
          "sqlManagement": "[variables('sqlRpInstallMode')]",
          "SqlServerLicenseType": "[variables('sqlLicense')]",
          "StorageConfigurationSettings": "[if(equals(variables('sqlRpInstallMode'),'Full'), variables('rpStorageConfigurationSettings'), json('null'))]",
          "serverConfigurationsManagementSettings": "[if(equals(variables('sqlRpInstallMode'),'Full'), variables('rpServerConfigurationsManagementSettings'), json('null'))]"
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmName'), '/OmegaMadLabSqlDscExtension')]",
      "location": "[parameters('location')]",
      "apiVersion": "2019-07-01",
      "dependsOn": [
        "[resourceId('Microsoft.SqlVirtualMachine/SqlVirtualMachines', parameters('vmName'))]"
      ],
      "tags": {
        "displayName": "SqlDscConfig"
      },
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.76",
        "autoUpgradeMinorVersion": false,
        "settings": {
            "configuration": {
                "url": "[variables('sqlConfigModulesURL')]",
                "script": "[variables('SqlDscConfigScript')]",
                "function": "[variables('SqlDscConfigFunction')]"

            },
            "configurationArguments": {
                "prepareForHA": "[parameters('prepareForHA')]"
            }
        },
        "protectedSettings": {
            "configurationArguments": {
                "AdminCreds": {
                    "userName": "[parameters('adminUserName')]",
                    "Password": "[parameters('adminPassword')]"
                },
                "domainName": "[parameters('adDomain')]"
            }
        }
      }
    }
  ]
} 
