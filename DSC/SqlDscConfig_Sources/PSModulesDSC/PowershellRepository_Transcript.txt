**********************
Windows PowerShell transcript start
Start time: 20181018175438
Username: User Manager\ContainerAdministrator
RunAs User: User Manager\ContainerAdministrator
Machine: 8C646F17A9BB (Microsoft Windows NT 10.0.14393.0)
Host Application: powershell.exe -ExecutionPolicy ByPass -EncodedCommand LgAgAEMAOgBcAFAAbwB3AGUAcgBzAGgAZQBsAGwAUgBlAHAAbwBzAGkAdABvAHIAeQBfAFMAdABhAHIAdABUAGUAcwB0AC4AcABzADEA
Process ID: 6184
PSVersion: 5.1.14393.2312
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.14393.2312
BuildVersion: 10.0.14393.2312
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Transcript started, output file is C:\projects\psmodulesdsc\PowershellRepository_Transcript.txt
[Build Info] [UTC 10/18/2018 17:54:38] Installing Pester.
[Build Info] [UTC 10/18/2018 17:55:09] Invoking pester on all tests in the path: C:\projects\psmodulesdsc\Tests\Unit\PowershellRepository.tests.ps1
[Build Info] [UTC 10/18/2018 17:55:09] Using these files to calculate code coverage: C:\projects\psmodulesdsc\DSCClassResources\PowershellRepository\PowershellRepository.psm1
Executing all tests in 'C:\projects\psmodulesdsc\Tests\Unit\PowershellRepository.tests.ps1'

Executing script C:\projects\psmodulesdsc\Tests\Unit\PowershellRepository.tests.ps1

  Describing PowershellRepository

    Context When the GetPSBoundParameters method is called
      [+] Should not throw
2.58s
      [+] Should be a hashtable
161ms
      [+] Should return the expected properties
104ms

    Context When the Get method is called
      [+] Should not throw
727ms
      [+] Should return a type of PowershellRepository
547ms
      [+] Should call Get-PSRepository one time
506ms
      [+] Should return null if PSRepository does not exist
69ms
      [+] Should return name and version if PSRepository does exist
41ms

    Context When the Test method is called
      [+] Should not throw
680ms
      [+] Should return a type of "boolean"
537ms

      Context Ensure = Present
        [+] Should return $false when PSRepository does not exist
158ms
**********************
Command start time: 20181018175531
**********************
PS>TerminatingError(): "SourceLocation is required when the PSRepository does not currently exist."
        [+] Should throw when PSRepository does not exist and SourceLocation unspecified
256ms
        [+] Should not throw when PSGallery does not exist and SourceLocation unspecified
112ms
        [+] Should return $false when InstallationPolicy is incorrect
51ms
        [+] Should return $false when SourceLocation is incorrect
27ms
        [+] Should return $true when PSRepository does exist
39ms

      Context Ensure = Absent
        [+] Should return $false when PSRepository does exist
70ms
        [+] Should return $true when PSRepository does not exist
71ms

    Context When the Set method is called
      [+] Should not throw
1.83s
      [+] Should call Install-PackageProvider if Ensure is Present and NuGet provider is missing
4.82s
      [+] Should call Register-PSRepository if Ensure is Present and repository is absent
1.89s
      [+] Should call Set-PSRepository if InstallationPolicy is incorrect
1.21s
      [+] Should call Unregister then Set-PSRepository if SourceLocation is incorrect
22.86s
      [+] Should call Unregister-PSRepository if Ensure is Absent
40ms
Tests completed in 39.4s
Tests Passed: 24,
Failed: 0,
Skipped: 0,
Pending: 0,
Inconclusive: 0

Code coverage report:
Covered 93.55 % of 93 analyzed Commands in 1 File.
Missed commands:

File                      Function Line Command
----                      -------- ---- -------
PowershellRepository.psm1 Set        89 $PSBoundParameters.Remove("SourceLoc...
PowershellRepository.psm1 Set        90 $PSBoundParameters.Remove("Name")
PowershellRepository.psm1 Set        91 Register-PSRepository -Default @PSBo...
PowershellRepository.psm1 Set       106 $PSBoundParameters.Remove("SourceLoc...
PowershellRepository.psm1 Set       107 $PSBoundParameters.Remove("Name")
PowershellRepository.psm1 Set       108 Register-PSRepository -Default @PSBo...


VERBOSE: Tests ran for 01:31 minutes.
**********************
Windows PowerShell transcript end
End time: 20181018175610
**********************
