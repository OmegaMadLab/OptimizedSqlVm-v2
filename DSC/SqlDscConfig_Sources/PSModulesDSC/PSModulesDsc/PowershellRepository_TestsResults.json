{"TagFilter":null,"ExcludeTagFilter":null,"TestNameFilter":null,"TotalCount":24,"PassedCount":24,"FailedCount":0,"SkippedCount":0,"PendingCount":0,"InconclusiveCount":0,"Time":{"Ticks":393961520,"Days":0,"Hours":0,"Milliseconds":396,"Minutes":0,"Seconds":39,"TotalDays":0.00045597398148148146,"TotalHours":0.010943375555555555,"TotalMilliseconds":39396.152,"TotalMinutes":0.65660253333333329,"TotalSeconds":39.396152},"TestResult":[{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellRepository","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":25766418,"Days":0,"Hours":0,"Milliseconds":576,"Minutes":0,"Seconds":2,"TotalDays":2.9822243055555554E-05,"TotalHours":0.0007157338333333333,"TotalMilliseconds":2576.6418000000003,"TotalMinutes":0.04294403,"TotalSeconds":2.5766418},"Name":"Should not throw","Result":"Passed","Context":"When the GetPSBoundParameters method is called","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellRepository","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":1614793,"Days":0,"Hours":0,"Milliseconds":161,"Minutes":0,"Seconds":0,"TotalDays":1.8689733796296296E-06,"TotalHours":4.485536111111111E-05,"TotalMilliseconds":161.4793,"TotalMinutes":0.0026913216666666667,"TotalSeconds":0.1614793},"Name":"Should be a hashtable","Result":"Passed","Context":"When the GetPSBoundParameters method is called","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellRepository","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":1043716,"Days":0,"Hours":0,"Milliseconds":104,"Minutes":0,"Seconds":0,"TotalDays":1.2080046296296295E-06,"TotalHours":2.8992111111111109E-05,"TotalMilliseconds":104.3716,"TotalMinutes":0.0017395266666666667,"TotalSeconds":0.1043716},"Name":"Should return the expected properties","Result":"Passed","Context":"When the GetPSBoundParameters method is called","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellRepository","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":7279963,"Days":0,"Hours":0,"Milliseconds":727,"Minutes":0,"Seconds":0,"TotalDays":8.4258831018518514E-06,"TotalHours":0.00020222119444444445,"TotalMilliseconds":727.9963,"TotalMinutes":0.012133271666666667,"TotalSeconds":0.72799629999999993},"Name":"Should not throw","Result":"Passed","Context":"When the Get method is called","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellRepository","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":5470985,"Days":0,"Hours":0,"Milliseconds":547,"Minutes":0,"Seconds":0,"TotalDays":6.3321585648148145E-06,"TotalHours":0.00015197180555555554,"TotalMilliseconds":547.09850000000006,"TotalMinutes":0.0091183083333333335,"TotalSeconds":0.54709849999999993},"Name":"Should return a type of PowershellRepository","Result":"Passed","Context":"When the Get method is called","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellRepository","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":5067561,"Days":0,"Hours":0,"Milliseconds":506,"Minutes":0,"Seconds":0,"TotalDays":5.8652326388888884E-06,"TotalHours":0.00014076558333333332,"TotalMilliseconds":506.7561,"TotalMinutes":0.008445935,"TotalSeconds":0.50675609999999993},"Name":"Should call Get-PSRepository one time","Result":"Passed","Context":"When the Get method is called","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellRepository","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":696895,"Days":0,"Hours":0,"Milliseconds":69,"Minutes":0,"Seconds":0,"TotalDays":8.0659143518518511E-07,"TotalHours":1.9358194444444443E-05,"TotalMilliseconds":69.68950000000001,"TotalMinutes":0.0011614916666666667,"TotalSeconds":0.0696895},"Name":"Should return null if PSRepository does not exist","Result":"Passed","Context":"When the Get method is called","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellRepository","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":413825,"Days":0,"Hours":0,"Milliseconds":41,"Minutes":0,"Seconds":0,"TotalDays":4.789641203703703E-07,"TotalHours":1.1495138888888889E-05,"TotalMilliseconds":41.3825,"TotalMinutes":0.0006897083333333333,"TotalSeconds":0.041382499999999996},"Name":"Should return name and version if PSRepository does exist","Result":"Passed","Context":"When the Get method is called","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellRepository","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":6802917,"Days":0,"Hours":0,"Milliseconds":680,"Minutes":0,"Seconds":0,"TotalDays":7.8737465277777774E-06,"TotalHours":0.00018896991666666666,"TotalMilliseconds":680.2917,"TotalMinutes":0.011338195,"TotalSeconds":0.68029169999999994},"Name":"Should not throw","Result":"Passed","Context":"When the Test method is called","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellRepository","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":5372106,"Days":0,"Hours":0,"Milliseconds":537,"Minutes":0,"Seconds":0,"TotalDays":6.2177152777777779E-06,"TotalHours":0.00014922516666666667,"TotalMilliseconds":537.2106,"TotalMinutes":0.00895351,"TotalSeconds":0.5372106},"Name":"Should return a type of \"boolean\"","Result":"Passed","Context":"When the Test method is called","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellRepository","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":1588306,"Days":0,"Hours":0,"Milliseconds":158,"Minutes":0,"Seconds":0,"TotalDays":1.8383171296296295E-06,"TotalHours":4.4119611111111112E-05,"TotalMilliseconds":158.8306,"TotalMinutes":0.0026471766666666665,"TotalSeconds":0.1588306},"Name":"Should return $false when PSRepository does not exist","Result":"Passed","Context":"When the Test method is called\\Ensure = Present","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellRepository","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":2564024,"Days":0,"Hours":0,"Milliseconds":256,"Minutes":0,"Seconds":0,"TotalDays":2.9676203703703704E-06,"TotalHours":7.122288888888889E-05,"TotalMilliseconds":256.4024,"TotalMinutes":0.0042733733333333336,"TotalSeconds":0.2564024},"Name":"Should throw when PSRepository does not exist and SourceLocation unspecified","Result":"Passed","Context":"When the Test method is called\\Ensure = Present","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellRepository","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":1126063,"Days":0,"Hours":0,"Milliseconds":112,"Minutes":0,"Seconds":0,"TotalDays":1.3033136574074074E-06,"TotalHours":3.1279527777777777E-05,"TotalMilliseconds":112.6063,"TotalMinutes":0.0018767716666666667,"TotalSeconds":0.11260629999999999},"Name":"Should not throw when PSGallery does not exist and SourceLocation unspecified","Result":"Passed","Context":"When the Test method is called\\Ensure = Present","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellRepository","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":517675,"Days":0,"Hours":0,"Milliseconds":51,"Minutes":0,"Seconds":0,"TotalDays":5.9916087962962964E-07,"TotalHours":1.437986111111111E-05,"TotalMilliseconds":51.767500000000005,"TotalMinutes":0.00086279166666666665,"TotalSeconds":0.0517675},"Name":"Should return $false when InstallationPolicy is incorrect","Result":"Passed","Context":"When the Test method is called\\Ensure = Present","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellRepository","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":275055,"Days":0,"Hours":0,"Milliseconds":27,"Minutes":0,"Seconds":0,"TotalDays":3.1835069444444445E-07,"TotalHours":7.6404166666666656E-06,"TotalMilliseconds":27.5055,"TotalMinutes":0.000458425,"TotalSeconds":0.0275055},"Name":"Should return $false when SourceLocation is incorrect","Result":"Passed","Context":"When the Test method is called\\Ensure = Present","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellRepository","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":391177,"Days":0,"Hours":0,"Milliseconds":39,"Minutes":0,"Seconds":0,"TotalDays":4.5275115740740738E-07,"TotalHours":1.0866027777777778E-05,"TotalMilliseconds":39.1177,"TotalMinutes":0.0006519616666666667,"TotalSeconds":0.0391177},"Name":"Should return $true when PSRepository does exist","Result":"Passed","Context":"When the Test method is called\\Ensure = Present","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellRepository","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":701255,"Days":0,"Hours":0,"Milliseconds":70,"Minutes":0,"Seconds":0,"TotalDays":8.1163773148148143E-07,"TotalHours":1.9479305555555556E-05,"TotalMilliseconds":70.1255,"TotalMinutes":0.0011687583333333334,"TotalSeconds":0.0701255},"Name":"Should return $false when PSRepository does exist","Result":"Passed","Context":"When the Test method is called\\Ensure = Absent","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellRepository","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":713917,"Days":0,"Hours":0,"Milliseconds":71,"Minutes":0,"Seconds":0,"TotalDays":8.26292824074074E-07,"TotalHours":1.9831027777777776E-05,"TotalMilliseconds":71.3917,"TotalMinutes":0.0011898616666666667,"TotalSeconds":0.0713917},"Name":"Should return $true when PSRepository does not exist","Result":"Passed","Context":"When the Test method is called\\Ensure = Absent","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellRepository","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":18298058,"Days":0,"Hours":0,"Milliseconds":829,"Minutes":0,"Seconds":1,"TotalDays":2.1178307870370368E-05,"TotalHours":0.00050827938888888891,"TotalMilliseconds":1829.8058,"TotalMinutes":0.030496763333333333,"TotalSeconds":1.8298058},"Name":"Should not throw","Result":"Passed","Context":"When the Set method is called","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellRepository","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":48246329,"Days":0,"Hours":0,"Milliseconds":824,"Minutes":0,"Seconds":4,"TotalDays":5.5840658564814811E-05,"TotalHours":0.0013401758055555555,"TotalMilliseconds":4824.6329000000005,"TotalMinutes":0.080410548333333332,"TotalSeconds":4.8246329},"Name":"Should call Install-PackageProvider if Ensure is Present and NuGet provider is missing","Result":"Passed","Context":"When the Set method is called","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellRepository","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":18855408,"Days":0,"Hours":0,"Milliseconds":885,"Minutes":0,"Seconds":1,"TotalDays":2.182338888888889E-05,"TotalHours":0.00052376133333333335,"TotalMilliseconds":1885.5408,"TotalMinutes":0.03142568,"TotalSeconds":1.8855408},"Name":"Should call Register-PSRepository if Ensure is Present and repository is absent","Result":"Passed","Context":"When the Set method is called","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellRepository","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":12145960,"Days":0,"Hours":0,"Milliseconds":214,"Minutes":0,"Seconds":1,"TotalDays":1.4057824074074073E-05,"TotalHours":0.00033738777777777776,"TotalMilliseconds":1214.596,"TotalMinutes":0.020243266666666666,"TotalSeconds":1.214596},"Name":"Should call Set-PSRepository if InstallationPolicy is incorrect","Result":"Passed","Context":"When the Set method is called","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellRepository","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":228602985,"Days":0,"Hours":0,"Milliseconds":860,"Minutes":0,"Seconds":22,"TotalDays":0.00026458678819444442,"TotalHours":0.0063500829166666661,"TotalMilliseconds":22860.2985,"TotalMinutes":0.381004975,"TotalSeconds":22.8602985},"Name":"Should call Unregister then Set-PSRepository if SourceLocation is incorrect","Result":"Passed","Context":"When the Set method is called","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellRepository","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":406129,"Days":0,"Hours":0,"Milliseconds":40,"Minutes":0,"Seconds":0,"TotalDays":4.7005671296296296E-07,"TotalHours":1.1281361111111111E-05,"TotalMilliseconds":40.6129,"TotalMinutes":0.00067688166666666669,"TotalSeconds":0.0406129},"Name":"Should call Unregister-PSRepository if Ensure is Absent","Result":"Passed","Context":"When the Set method is called","StackTrace":""}],"CodeCoverage":{"NumberOfCommandsAnalyzed":93,"NumberOfFilesAnalyzed":1,"NumberOfCommandsExecuted":87,"NumberOfCommandsMissed":6,"MissedCommands":[{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":89,"Function":"Set","Command":"$PSBoundParameters.Remove(\"SourceLocation\")"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":90,"Function":"Set","Command":"$PSBoundParameters.Remove(\"Name\")"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":91,"Function":"Set","Command":"Register-PSRepository -Default @PSBoundParameters"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":106,"Function":"Set","Command":"$PSBoundParameters.Remove(\"SourceLocation\")"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":107,"Function":"Set","Command":"$PSBoundParameters.Remove(\"Name\")"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":108,"Function":"Set","Command":"Register-PSRepository -Default @PSBoundParameters"}],"HitCommands":[{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":51,"Function":"Get","Command":"$Repository = Get-PSRepository -Name $this.Name -ErrorAction SilentlyContinue"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":53,"Function":"Get","Command":"if ($Repository)\r\n        {\r\n            $this.Name = $Repository.Name\r\n            $this.InstallationPolicy = $Repository.InstallationPolicy\r\n            $this.SourceLocation = $Repository.SourceLocation\r\n        }\r\n        else\r\n        {\r\n            $this.Name = $null\r\n            $this.InstallationPolicy = $null\r\n            $this.SourceLocation = $null\r\n        }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":55,"Function":"Get","Command":"$this.Name = $Repository.Name"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":56,"Function":"Get","Command":"$this.InstallationPolicy = $Repository.InstallationPolicy"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":57,"Function":"Get","Command":"$this.SourceLocation = $Repository.SourceLocation"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":61,"Function":"Get","Command":"$this.Name = $null"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":62,"Function":"Get","Command":"$this.InstallationPolicy = $null"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":63,"Function":"Get","Command":"$this.SourceLocation = $null"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":66,"Function":"Get","Command":"return $this"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":71,"Function":"Set","Command":"$PSBoundParameters = $this.GetPSBoundParameters()"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":72,"Function":"Set","Command":"$Repository = Get-PSRepository -Name $this.Name -ErrorAction SilentlyContinue"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":73,"Function":"Set","Command":"$Count = ($Repository | Measure-Object).Count"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":73,"Function":"Set","Command":"$Repository"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":73,"Function":"Set","Command":"Measure-Object"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":75,"Function":"Set","Command":"if ($this.Ensure -eq [Ensure]::Present)\r\n        {\r\n            if (-not (Get-PackageProvider | Where-Object { $_.Name -eq \"NuGet\" -and $_.Version -ge \"2.8.5.201\" }))\r\n            {\r\n                Write-Verbose -Message \"Installing latest NuGet package provider in order to use Register-PSRepository.\"\r\n                $null = Install-PackageProvider -Name NuGet -Scope AllUsers -MinimumVersion 2.8.5.201 -Force\r\n            }\r\n\r\n            if ($Count -ne 1)\r\n            {\r\n                Write-Verbose -Message \"Registering repository [$($this.Name)].\"\r\n\r\n                if ($this.Name -eq \"PSGallery\")\r\n                {\r\n                    $PSBoundParameters.Remove(\"SourceLocation\")\r\n                    $PSBoundParameters.Remove(\"Name\")\r\n                    Register-PSRepository -Default @PSBoundParameters\r\n                }\r\n                else\r\n                {\r\n                    Register-PSRepository @PSBoundParameters\r\n                }\r\n            }\r\n            elseif ($this.SourceLocation -and $Repository -and ($Repository.SourceLocation -ne $this.SourceLocation))\r\n            {\r\n                Write-Verbose -Message \"Re-register repository [$($this.Name)] to have SourceLocation [$($this.SourceLocation)].\"\r\n\r\n                Unregister-PSRepository -Name $Repository.Name\r\n\r\n                if ($this.Name -eq \"PSGallery\")\r\n                {\r\n                    $PSBoundParameters.Remove(\"SourceLocation\")\r\n                    $PSBoundParameters.Remove(\"Name\")\r\n                    Register-PSRepository -Default @PSBoundParameters\r\n                }\r\n                else\r\n                {\r\n                    Register-PSRepository @PSBoundParameters\r\n                }\r\n            }\r\n            elseif ($this.InstallationPolicy -and ($Repository.InstallationPolicy -ne $this.InstallationPolicy))\r\n            {\r\n                Write-Verbose -Message \"Configuring repository [$($this.Name)] to have InstallationPolicy [$($this.InstallationPolicy)].\"\r\n                Set-PSRepository @PSBoundParameters\r\n            }\r\n        }\r\n        elseif ($this.Ensure -eq [Ensure]::Absent)\r\n        {\r\n            if ($Count -gt 0)\r\n            {\r\n                Write-Verbose -Message \"Unregister repository [$($this.Name)].\"\r\n\r\n                Unregister-PSRepository $this.Name\r\n            }\r\n        }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":77,"Function":"Set","Command":"if (-not (Get-PackageProvider | Where-Object { $_.Name -eq \"NuGet\" -and $_.Version -ge \"2.8.5.201\" }))\r\n            {\r\n                Write-Verbose -Message \"Installing latest NuGet package provider in order to use Register-PSRepository.\"\r\n                $null = Install-PackageProvider -Name NuGet -Scope AllUsers -MinimumVersion 2.8.5.201 -Force\r\n            }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":77,"Function":"Set","Command":"Get-PackageProvider"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":77,"Function":"Set","Command":"Where-Object { $_.Name -eq \"NuGet\" -and $_.Version -ge \"2.8.5.201\" }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":77,"Function":"Set","Command":"$_.Name -eq \"NuGet\" -and $_.Version -ge \"2.8.5.201\""},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":79,"Function":"Set","Command":"Write-Verbose -Message \"Installing latest NuGet package provider in order to use Register-PSRepository.\""},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":80,"Function":"Set","Command":"$null = Install-PackageProvider -Name NuGet -Scope AllUsers -MinimumVersion 2.8.5.201 -Force"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":83,"Function":"Set","Command":"if ($Count -ne 1)\r\n            {\r\n                Write-Verbose -Message \"Registering repository [$($this.Name)].\"\r\n\r\n                if ($this.Name -eq \"PSGallery\")\r\n                {\r\n                    $PSBoundParameters.Remove(\"SourceLocation\")\r\n                    $PSBoundParameters.Remove(\"Name\")\r\n                    Register-PSRepository -Default @PSBoundParameters\r\n                }\r\n                else\r\n                {\r\n                    Register-PSRepository @PSBoundParameters\r\n                }\r\n            }\r\n            elseif ($this.SourceLocation -and $Repository -and ($Repository.SourceLocation -ne $this.SourceLocation))\r\n            {\r\n                Write-Verbose -Message \"Re-register repository [$($this.Name)] to have SourceLocation [$($this.SourceLocation)].\"\r\n\r\n                Unregister-PSRepository -Name $Repository.Name\r\n\r\n                if ($this.Name -eq \"PSGallery\")\r\n                {\r\n                    $PSBoundParameters.Remove(\"SourceLocation\")\r\n                    $PSBoundParameters.Remove(\"Name\")\r\n                    Register-PSRepository -Default @PSBoundParameters\r\n                }\r\n                else\r\n                {\r\n                    Register-PSRepository @PSBoundParameters\r\n                }\r\n            }\r\n            elseif ($this.InstallationPolicy -and ($Repository.InstallationPolicy -ne $this.InstallationPolicy))\r\n            {\r\n                Write-Verbose -Message \"Configuring repository [$($this.Name)] to have InstallationPolicy [$($this.InstallationPolicy)].\"\r\n                Set-PSRepository @PSBoundParameters\r\n            }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":85,"Function":"Set","Command":"Write-Verbose -Message \"Registering repository [$($this.Name)].\""},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":85,"Function":"Set","Command":"$this.Name"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":87,"Function":"Set","Command":"if ($this.Name -eq \"PSGallery\")\r\n                {\r\n                    $PSBoundParameters.Remove(\"SourceLocation\")\r\n                    $PSBoundParameters.Remove(\"Name\")\r\n                    Register-PSRepository -Default @PSBoundParameters\r\n                }\r\n                else\r\n                {\r\n                    Register-PSRepository @PSBoundParameters\r\n                }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":95,"Function":"Set","Command":"Register-PSRepository @PSBoundParameters"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":98,"Function":"Set","Command":"if ($Count -ne 1)\r\n            {\r\n                Write-Verbose -Message \"Registering repository [$($this.Name)].\"\r\n\r\n                if ($this.Name -eq \"PSGallery\")\r\n                {\r\n                    $PSBoundParameters.Remove(\"SourceLocation\")\r\n                    $PSBoundParameters.Remove(\"Name\")\r\n                    Register-PSRepository -Default @PSBoundParameters\r\n                }\r\n                else\r\n                {\r\n                    Register-PSRepository @PSBoundParameters\r\n                }\r\n            }\r\n            elseif ($this.SourceLocation -and $Repository -and ($Repository.SourceLocation -ne $this.SourceLocation))\r\n            {\r\n                Write-Verbose -Message \"Re-register repository [$($this.Name)] to have SourceLocation [$($this.SourceLocation)].\"\r\n\r\n                Unregister-PSRepository -Name $Repository.Name\r\n\r\n                if ($this.Name -eq \"PSGallery\")\r\n                {\r\n                    $PSBoundParameters.Remove(\"SourceLocation\")\r\n                    $PSBoundParameters.Remove(\"Name\")\r\n                    Register-PSRepository -Default @PSBoundParameters\r\n                }\r\n                else\r\n                {\r\n                    Register-PSRepository @PSBoundParameters\r\n                }\r\n            }\r\n            elseif ($this.InstallationPolicy -and ($Repository.InstallationPolicy -ne $this.InstallationPolicy))\r\n            {\r\n                Write-Verbose -Message \"Configuring repository [$($this.Name)] to have InstallationPolicy [$($this.InstallationPolicy)].\"\r\n                Set-PSRepository @PSBoundParameters\r\n            }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":98,"Function":"Set","Command":"$Repository.SourceLocation -ne $this.SourceLocation"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":100,"Function":"Set","Command":"Write-Verbose -Message \"Re-register repository [$($this.Name)] to have SourceLocation [$($this.SourceLocation)].\""},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":100,"Function":"Set","Command":"$this.Name"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":100,"Function":"Set","Command":"$this.SourceLocation"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":102,"Function":"Set","Command":"Unregister-PSRepository -Name $Repository.Name"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":104,"Function":"Set","Command":"if ($this.Name -eq \"PSGallery\")\r\n                {\r\n                    $PSBoundParameters.Remove(\"SourceLocation\")\r\n                    $PSBoundParameters.Remove(\"Name\")\r\n                    Register-PSRepository -Default @PSBoundParameters\r\n                }\r\n                else\r\n                {\r\n                    Register-PSRepository @PSBoundParameters\r\n                }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":112,"Function":"Set","Command":"Register-PSRepository @PSBoundParameters"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":115,"Function":"Set","Command":"if ($Count -ne 1)\r\n            {\r\n                Write-Verbose -Message \"Registering repository [$($this.Name)].\"\r\n\r\n                if ($this.Name -eq \"PSGallery\")\r\n                {\r\n                    $PSBoundParameters.Remove(\"SourceLocation\")\r\n                    $PSBoundParameters.Remove(\"Name\")\r\n                    Register-PSRepository -Default @PSBoundParameters\r\n                }\r\n                else\r\n                {\r\n                    Register-PSRepository @PSBoundParameters\r\n                }\r\n            }\r\n            elseif ($this.SourceLocation -and $Repository -and ($Repository.SourceLocation -ne $this.SourceLocation))\r\n            {\r\n                Write-Verbose -Message \"Re-register repository [$($this.Name)] to have SourceLocation [$($this.SourceLocation)].\"\r\n\r\n                Unregister-PSRepository -Name $Repository.Name\r\n\r\n                if ($this.Name -eq \"PSGallery\")\r\n                {\r\n                    $PSBoundParameters.Remove(\"SourceLocation\")\r\n                    $PSBoundParameters.Remove(\"Name\")\r\n                    Register-PSRepository -Default @PSBoundParameters\r\n                }\r\n                else\r\n                {\r\n                    Register-PSRepository @PSBoundParameters\r\n                }\r\n            }\r\n            elseif ($this.InstallationPolicy -and ($Repository.InstallationPolicy -ne $this.InstallationPolicy))\r\n            {\r\n                Write-Verbose -Message \"Configuring repository [$($this.Name)] to have InstallationPolicy [$($this.InstallationPolicy)].\"\r\n                Set-PSRepository @PSBoundParameters\r\n            }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":115,"Function":"Set","Command":"$Repository.InstallationPolicy -ne $this.InstallationPolicy"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":117,"Function":"Set","Command":"Write-Verbose -Message \"Configuring repository [$($this.Name)] to have InstallationPolicy [$($this.InstallationPolicy)].\""},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":117,"Function":"Set","Command":"$this.Name"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":117,"Function":"Set","Command":"$this.InstallationPolicy"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":118,"Function":"Set","Command":"Set-PSRepository @PSBoundParameters"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":121,"Function":"Set","Command":"if ($this.Ensure -eq [Ensure]::Present)\r\n        {\r\n            if (-not (Get-PackageProvider | Where-Object { $_.Name -eq \"NuGet\" -and $_.Version -ge \"2.8.5.201\" }))\r\n            {\r\n                Write-Verbose -Message \"Installing latest NuGet package provider in order to use Register-PSRepository.\"\r\n                $null = Install-PackageProvider -Name NuGet -Scope AllUsers -MinimumVersion 2.8.5.201 -Force\r\n            }\r\n\r\n            if ($Count -ne 1)\r\n            {\r\n                Write-Verbose -Message \"Registering repository [$($this.Name)].\"\r\n\r\n                if ($this.Name -eq \"PSGallery\")\r\n                {\r\n                    $PSBoundParameters.Remove(\"SourceLocation\")\r\n                    $PSBoundParameters.Remove(\"Name\")\r\n                    Register-PSRepository -Default @PSBoundParameters\r\n                }\r\n                else\r\n                {\r\n                    Register-PSRepository @PSBoundParameters\r\n                }\r\n            }\r\n            elseif ($this.SourceLocation -and $Repository -and ($Repository.SourceLocation -ne $this.SourceLocation))\r\n            {\r\n                Write-Verbose -Message \"Re-register repository [$($this.Name)] to have SourceLocation [$($this.SourceLocation)].\"\r\n\r\n                Unregister-PSRepository -Name $Repository.Name\r\n\r\n                if ($this.Name -eq \"PSGallery\")\r\n                {\r\n                    $PSBoundParameters.Remove(\"SourceLocation\")\r\n                    $PSBoundParameters.Remove(\"Name\")\r\n                    Register-PSRepository -Default @PSBoundParameters\r\n                }\r\n                else\r\n                {\r\n                    Register-PSRepository @PSBoundParameters\r\n                }\r\n            }\r\n            elseif ($this.InstallationPolicy -and ($Repository.InstallationPolicy -ne $this.InstallationPolicy))\r\n            {\r\n                Write-Verbose -Message \"Configuring repository [$($this.Name)] to have InstallationPolicy [$($this.InstallationPolicy)].\"\r\n                Set-PSRepository @PSBoundParameters\r\n            }\r\n        }\r\n        elseif ($this.Ensure -eq [Ensure]::Absent)\r\n        {\r\n            if ($Count -gt 0)\r\n            {\r\n                Write-Verbose -Message \"Unregister repository [$($this.Name)].\"\r\n\r\n                Unregister-PSRepository $this.Name\r\n            }\r\n        }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":123,"Function":"Set","Command":"if ($Count -gt 0)\r\n            {\r\n                Write-Verbose -Message \"Unregister repository [$($this.Name)].\"\r\n\r\n                Unregister-PSRepository $this.Name\r\n            }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":125,"Function":"Set","Command":"Write-Verbose -Message \"Unregister repository [$($this.Name)].\""},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":125,"Function":"Set","Command":"$this.Name"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":127,"Function":"Set","Command":"Unregister-PSRepository $this.Name"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":134,"Function":"Test","Command":"$Repository = Get-PSRepository -Name $this.Name -ErrorAction SilentlyContinue"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":135,"Function":"Test","Command":"$Count = ($Repository | Measure-Object).Count"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":135,"Function":"Test","Command":"$Repository"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":135,"Function":"Test","Command":"Measure-Object"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":136,"Function":"Test","Command":"$Result = $true"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":138,"Function":"Test","Command":"if ($this.Ensure -eq [Ensure]::Present)\r\n        {\r\n            if ($Count -ne 1)\r\n            {\r\n                if (-not $this.SourceLocation -and ($this.Name -ne \"PSGallery\"))\r\n                {\r\n                    throw \"SourceLocation is required when the PSRepository does not currently exist.\"\r\n                }\r\n\r\n                Write-Verbose -Message \"Expected a single instance of repository [$($this.Name)] but was [$($Count)].\"\r\n                $Result = $false\r\n            }\r\n\r\n            if ($this.InstallationPolicy -and ($Repository.InstallationPolicy -ne $this.InstallationPolicy))\r\n            {\r\n                Write-Verbose -Message \"Expected repository [$($this.Name)] to have InstallationPolicy [$($this.InstallationPolicy)] but was [$($Repository.InstallationPolicy)].\"\r\n                $Result = $false\r\n            }\r\n\r\n            if ($this.SourceLocation -and ($Repository.SourceLocation -ne $this.SourceLocation))\r\n            {\r\n                Write-Verbose -Message \"Expected repository [$($this.Name)] to have SourceLocation [$($this.SourceLocation)] but was [$($Repository.SourceLocation)].\"\r\n                $Result = $false\r\n            }\r\n        }\r\n        elseif ($this.Ensure -eq [Ensure]::Absent)\r\n        {\r\n            if ($Count -ne 0)\r\n            {\r\n                Write-Verbose -Message \"Expected no instance of repository [$($this.Name)] but was [$($Count)].\"\r\n                $Result = $false\r\n            }\r\n        }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":140,"Function":"Test","Command":"if ($Count -ne 1)\r\n            {\r\n                if (-not $this.SourceLocation -and ($this.Name -ne \"PSGallery\"))\r\n                {\r\n                    throw \"SourceLocation is required when the PSRepository does not currently exist.\"\r\n                }\r\n\r\n                Write-Verbose -Message \"Expected a single instance of repository [$($this.Name)] but was [$($Count)].\"\r\n                $Result = $false\r\n            }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":142,"Function":"Test","Command":"if (-not $this.SourceLocation -and ($this.Name -ne \"PSGallery\"))\r\n                {\r\n                    throw \"SourceLocation is required when the PSRepository does not currently exist.\"\r\n                }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":142,"Function":"Test","Command":"$this.Name -ne \"PSGallery\""},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":144,"Function":"Test","Command":"throw \"SourceLocation is required when the PSRepository does not currently exist.\""},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":147,"Function":"Test","Command":"Write-Verbose -Message \"Expected a single instance of repository [$($this.Name)] but was [$($Count)].\""},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":147,"Function":"Test","Command":"$this.Name"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":147,"Function":"Test","Command":"$Count"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":148,"Function":"Test","Command":"$Result = $false"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":151,"Function":"Test","Command":"if ($this.InstallationPolicy -and ($Repository.InstallationPolicy -ne $this.InstallationPolicy))\r\n            {\r\n                Write-Verbose -Message \"Expected repository [$($this.Name)] to have InstallationPolicy [$($this.InstallationPolicy)] but was [$($Repository.InstallationPolicy)].\"\r\n                $Result = $false\r\n            }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":151,"Function":"Test","Command":"$Repository.InstallationPolicy -ne $this.InstallationPolicy"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":153,"Function":"Test","Command":"Write-Verbose -Message \"Expected repository [$($this.Name)] to have InstallationPolicy [$($this.InstallationPolicy)] but was [$($Repository.InstallationPolicy)].\""},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":153,"Function":"Test","Command":"$this.Name"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":153,"Function":"Test","Command":"$this.InstallationPolicy"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":153,"Function":"Test","Command":"$Repository.InstallationPolicy"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":154,"Function":"Test","Command":"$Result = $false"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":157,"Function":"Test","Command":"if ($this.SourceLocation -and ($Repository.SourceLocation -ne $this.SourceLocation))\r\n            {\r\n                Write-Verbose -Message \"Expected repository [$($this.Name)] to have SourceLocation [$($this.SourceLocation)] but was [$($Repository.SourceLocation)].\"\r\n                $Result = $false\r\n            }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":157,"Function":"Test","Command":"$Repository.SourceLocation -ne $this.SourceLocation"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":159,"Function":"Test","Command":"Write-Verbose -Message \"Expected repository [$($this.Name)] to have SourceLocation [$($this.SourceLocation)] but was [$($Repository.SourceLocation)].\""},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":159,"Function":"Test","Command":"$this.Name"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":159,"Function":"Test","Command":"$this.SourceLocation"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":159,"Function":"Test","Command":"$Repository.SourceLocation"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":160,"Function":"Test","Command":"$Result = $false"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":163,"Function":"Test","Command":"if ($this.Ensure -eq [Ensure]::Present)\r\n        {\r\n            if ($Count -ne 1)\r\n            {\r\n                if (-not $this.SourceLocation -and ($this.Name -ne \"PSGallery\"))\r\n                {\r\n                    throw \"SourceLocation is required when the PSRepository does not currently exist.\"\r\n                }\r\n\r\n                Write-Verbose -Message \"Expected a single instance of repository [$($this.Name)] but was [$($Count)].\"\r\n                $Result = $false\r\n            }\r\n\r\n            if ($this.InstallationPolicy -and ($Repository.InstallationPolicy -ne $this.InstallationPolicy))\r\n            {\r\n                Write-Verbose -Message \"Expected repository [$($this.Name)] to have InstallationPolicy [$($this.InstallationPolicy)] but was [$($Repository.InstallationPolicy)].\"\r\n                $Result = $false\r\n            }\r\n\r\n            if ($this.SourceLocation -and ($Repository.SourceLocation -ne $this.SourceLocation))\r\n            {\r\n                Write-Verbose -Message \"Expected repository [$($this.Name)] to have SourceLocation [$($this.SourceLocation)] but was [$($Repository.SourceLocation)].\"\r\n                $Result = $false\r\n            }\r\n        }\r\n        elseif ($this.Ensure -eq [Ensure]::Absent)\r\n        {\r\n            if ($Count -ne 0)\r\n            {\r\n                Write-Verbose -Message \"Expected no instance of repository [$($this.Name)] but was [$($Count)].\"\r\n                $Result = $false\r\n            }\r\n        }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":165,"Function":"Test","Command":"if ($Count -ne 0)\r\n            {\r\n                Write-Verbose -Message \"Expected no instance of repository [$($this.Name)] but was [$($Count)].\"\r\n                $Result = $false\r\n            }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":167,"Function":"Test","Command":"Write-Verbose -Message \"Expected no instance of repository [$($this.Name)] but was [$($Count)].\""},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":167,"Function":"Test","Command":"$this.Name"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":167,"Function":"Test","Command":"$Count"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":168,"Function":"Test","Command":"$Result = $false"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":172,"Function":"Test","Command":"return $Result"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":178,"Function":"GetPSBoundParameters","Command":"$PSBoundParameters = @{\r\n            Name = $this.Name;\r\n        }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":179,"Function":"GetPSBoundParameters","Command":"Name = $this.Name"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":182,"Function":"GetPSBoundParameters","Command":"if ($this.SourceLocation)\r\n        {\r\n            $PSBoundParameters[\"SourceLocation\"] = $this.SourceLocation\r\n        }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":184,"Function":"GetPSBoundParameters","Command":"$PSBoundParameters[\"SourceLocation\"] = $this.SourceLocation"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":187,"Function":"GetPSBoundParameters","Command":"if ($this.InstallationPolicy)\r\n        {\r\n            $PSBoundParameters[\"InstallationPolicy\"] = $this.InstallationPolicy\r\n        }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":189,"Function":"GetPSBoundParameters","Command":"$PSBoundParameters[\"InstallationPolicy\"] = $this.InstallationPolicy"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1","Line":192,"Function":"GetPSBoundParameters","Command":"return $PSBoundParameters"}],"AnalyzedFiles":["C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellRepository\\PowershellRepository.psm1"]}}
