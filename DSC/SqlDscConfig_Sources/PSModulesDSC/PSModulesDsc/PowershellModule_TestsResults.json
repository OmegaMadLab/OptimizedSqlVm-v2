{"TagFilter":null,"ExcludeTagFilter":null,"TestNameFilter":null,"TotalCount":22,"PassedCount":22,"FailedCount":0,"SkippedCount":0,"PendingCount":0,"InconclusiveCount":0,"Time":{"Ticks":79042052,"Days":0,"Hours":0,"Milliseconds":904,"Minutes":0,"Seconds":7,"TotalDays":9.1483856481481472E-05,"TotalHours":0.0021956125555555555,"TotalMilliseconds":7904.2052,"TotalMinutes":0.13173675333333335,"TotalSeconds":7.9042052},"TestResult":[{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellModule","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":32262432,"Days":0,"Hours":0,"Milliseconds":226,"Minutes":0,"Seconds":3,"TotalDays":3.7340777777777775E-05,"TotalHours":0.00089617866666666661,"TotalMilliseconds":3226.2432000000003,"TotalMinutes":0.05377072,"TotalSeconds":3.2262432},"Name":"Should not throw","Result":"Passed","Context":"When the GetPSBoundParameters method is called","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellModule","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":1880556,"Days":0,"Hours":0,"Milliseconds":188,"Minutes":0,"Seconds":0,"TotalDays":2.1765694444444443E-06,"TotalHours":5.2237666666666663E-05,"TotalMilliseconds":188.0556,"TotalMinutes":0.0031342600000000003,"TotalSeconds":0.1880556},"Name":"Should be a hashtable","Result":"Passed","Context":"When the GetPSBoundParameters method is called","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellModule","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":601318,"Days":0,"Hours":0,"Milliseconds":60,"Minutes":0,"Seconds":0,"TotalDays":6.9596990740740737E-07,"TotalHours":1.6703277777777779E-05,"TotalMilliseconds":60.131800000000005,"TotalMinutes":0.0010021966666666667,"TotalSeconds":0.0601318},"Name":"Should return the expected properties","Result":"Passed","Context":"When the GetPSBoundParameters method is called","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellModule","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":2042650,"Days":0,"Hours":0,"Milliseconds":204,"Minutes":0,"Seconds":0,"TotalDays":2.3641782407407405E-06,"TotalHours":5.6740277777777778E-05,"TotalMilliseconds":204.26500000000001,"TotalMinutes":0.0034044166666666667,"TotalSeconds":0.204265},"Name":"Should not throw","Result":"Passed","Context":"When the Get method is called","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellModule","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":952670,"Days":0,"Hours":0,"Milliseconds":95,"Minutes":0,"Seconds":0,"TotalDays":1.1026273148148148E-06,"TotalHours":2.6463055555555555E-05,"TotalMilliseconds":95.26700000000001,"TotalMinutes":0.0015877833333333333,"TotalSeconds":0.095266999999999991},"Name":"Should return a type of PowershellModule","Result":"Passed","Context":"When the Get method is called","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellModule","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":5811010,"Days":0,"Hours":0,"Milliseconds":581,"Minutes":0,"Seconds":0,"TotalDays":6.7257060185185183E-06,"TotalHours":0.00016141694444444445,"TotalMilliseconds":581.101,"TotalMinutes":0.0096850166666666675,"TotalSeconds":0.581101},"Name":"Should call Get-Module one time","Result":"Passed","Context":"When the Get method is called","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellModule","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":1028427,"Days":0,"Hours":0,"Milliseconds":102,"Minutes":0,"Seconds":0,"TotalDays":1.1903090277777777E-06,"TotalHours":2.8567416666666667E-05,"TotalMilliseconds":102.84270000000001,"TotalMinutes":0.001714045,"TotalSeconds":0.1028427},"Name":"Should return null if module does not exist","Result":"Passed","Context":"When the Get method is called","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellModule","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":670304,"Days":0,"Hours":0,"Milliseconds":67,"Minutes":0,"Seconds":0,"TotalDays":7.7581481481481478E-07,"TotalHours":1.8619555555555555E-05,"TotalMilliseconds":67.0304,"TotalMinutes":0.0011171733333333333,"TotalSeconds":0.0670304},"Name":"Should return name and version if module does exist","Result":"Passed","Context":"When the Get method is called","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellModule","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":1779992,"Days":0,"Hours":0,"Milliseconds":177,"Minutes":0,"Seconds":0,"TotalDays":2.060175925925926E-06,"TotalHours":4.9444222222222221E-05,"TotalMilliseconds":177.9992,"TotalMinutes":0.0029666533333333332,"TotalSeconds":0.1779992},"Name":"Should not throw","Result":"Passed","Context":"When the Test method is called","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellModule","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":679024,"Days":0,"Hours":0,"Milliseconds":67,"Minutes":0,"Seconds":0,"TotalDays":7.8590740740740733E-07,"TotalHours":1.8861777777777778E-05,"TotalMilliseconds":67.9024,"TotalMinutes":0.0011317066666666667,"TotalSeconds":0.0679024},"Name":"Should return a type of \"boolean\"","Result":"Passed","Context":"When the Test method is called","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellModule","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":1097475,"Days":0,"Hours":0,"Milliseconds":109,"Minutes":0,"Seconds":0,"TotalDays":1.2702256944444445E-06,"TotalHours":3.0485416666666665E-05,"TotalMilliseconds":109.7475,"TotalMinutes":0.001829125,"TotalSeconds":0.1097475},"Name":"Should return $false when module does not exist","Result":"Passed","Context":"When the Test method is called\\Ensure = Present","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellModule","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":3055154,"Days":0,"Hours":0,"Milliseconds":305,"Minutes":0,"Seconds":0,"TotalDays":3.5360578703703704E-06,"TotalHours":8.4865388888888887E-05,"TotalMilliseconds":305.5154,"TotalMinutes":0.0050919233333333331,"TotalSeconds":0.3055154},"Name":"Should return $false when module version is incorrect","Result":"Passed","Context":"When the Test method is called\\Ensure = Present","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellModule","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":670586,"Days":0,"Hours":0,"Milliseconds":67,"Minutes":0,"Seconds":0,"TotalDays":7.7614120370370368E-07,"TotalHours":1.8627388888888888E-05,"TotalMilliseconds":67.0586,"TotalMinutes":0.0011176433333333334,"TotalSeconds":0.0670586},"Name":"Should return $false when module count is incorrect","Result":"Passed","Context":"When the Test method is called\\Ensure = Present","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellModule","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":785735,"Days":0,"Hours":0,"Milliseconds":78,"Minutes":0,"Seconds":0,"TotalDays":9.0941550925925917E-07,"TotalHours":2.1825972222222222E-05,"TotalMilliseconds":78.57350000000001,"TotalMinutes":0.0013095583333333333,"TotalSeconds":0.078573499999999991},"Name":"Should return $true when module does exist","Result":"Passed","Context":"When the Test method is called\\Ensure = Present","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellModule","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":566334,"Days":0,"Hours":0,"Milliseconds":56,"Minutes":0,"Seconds":0,"TotalDays":6.5547916666666663E-07,"TotalHours":1.57315E-05,"TotalMilliseconds":56.6334,"TotalMinutes":0.00094389000000000007,"TotalSeconds":0.0566334},"Name":"Should return $false when module does exist","Result":"Passed","Context":"When the Test method is called\\Ensure = Absent","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellModule","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":222391,"Days":0,"Hours":0,"Milliseconds":22,"Minutes":0,"Seconds":0,"TotalDays":2.5739699074074074E-07,"TotalHours":6.1775277777777778E-06,"TotalMilliseconds":22.2391,"TotalMinutes":0.00037065166666666669,"TotalSeconds":0.022239099999999998},"Name":"Should return $true when module does not exist","Result":"Passed","Context":"When the Test method is called\\Ensure = Absent","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellModule","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":1509413,"Days":0,"Hours":0,"Milliseconds":150,"Minutes":0,"Seconds":0,"TotalDays":1.747005787037037E-06,"TotalHours":4.192813888888889E-05,"TotalMilliseconds":150.9413,"TotalMinutes":0.0025156883333333335,"TotalSeconds":0.1509413},"Name":"Should not throw","Result":"Passed","Context":"When the Set method is called","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellModule","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":2112870,"Days":0,"Hours":0,"Milliseconds":211,"Minutes":0,"Seconds":0,"TotalDays":2.4454513888888886E-06,"TotalHours":5.8690833333333331E-05,"TotalMilliseconds":211.287,"TotalMinutes":0.00352145,"TotalSeconds":0.211287},"Name":"Should call Install-Module if Ensure is Present","Result":"Passed","Context":"When the Set method is called","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellModule","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":7550936,"Days":0,"Hours":0,"Milliseconds":755,"Minutes":0,"Seconds":0,"TotalDays":8.73950925925926E-06,"TotalHours":0.0002097482222222222,"TotalMilliseconds":755.0936,"TotalMinutes":0.012584893333333333,"TotalSeconds":0.75509359999999992},"Name":"Should call Install-PackageProvider if Ensure is Present and NuGet provider is missing","Result":"Passed","Context":"When the Set method is called","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellModule","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":7206296,"Days":0,"Hours":0,"Milliseconds":720,"Minutes":0,"Seconds":0,"TotalDays":8.34062037037037E-06,"TotalHours":0.00020017488888888888,"TotalMilliseconds":720.6296,"TotalMinutes":0.012010493333333334,"TotalSeconds":0.7206296},"Name":"Should call Uninstall-Module and Install-Module if Ensure is Present and Version -lt desired","Result":"Passed","Context":"When the Set method is called","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellModule","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":5881018,"Days":0,"Hours":0,"Milliseconds":588,"Minutes":0,"Seconds":0,"TotalDays":6.8067337962962961E-06,"TotalHours":0.00016336161111111109,"TotalMilliseconds":588.1018,"TotalMinutes":0.0098016966666666667,"TotalSeconds":0.5881018},"Name":"Should call Uninstall-Module and Install-Module if Ensure is Present and Version -gt desired","Result":"Passed","Context":"When the Set method is called","StackTrace":""},{"ErrorRecord":null,"ParameterizedSuiteName":"","Describe":"PowershellModule","Parameters":{},"Passed":true,"Show":1023,"FailureMessage":"","Time":{"Ticks":675461,"Days":0,"Hours":0,"Milliseconds":67,"Minutes":0,"Seconds":0,"TotalDays":7.8178356481481474E-07,"TotalHours":1.8762805555555554E-05,"TotalMilliseconds":67.54610000000001,"TotalMinutes":0.0011257683333333335,"TotalSeconds":0.0675461},"Name":"Should call Uninstall-Module if Ensure is Absent","Result":"Passed","Context":"When the Set method is called","StackTrace":""}],"CodeCoverage":{"NumberOfCommandsAnalyzed":75,"NumberOfFilesAnalyzed":1,"NumberOfCommandsExecuted":75,"NumberOfCommandsMissed":0,"MissedCommands":[],"HitCommands":[{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":45,"Function":"Get","Command":"$Module = Get-Module -Name $this.Name -ListAvailable | Where-Object { $_.RepositorySourceLocation }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":45,"Function":"Get","Command":"$Module = Get-Module -Name $this.Name -ListAvailable | Where-Object { $_.RepositorySourceLocation }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":45,"Function":"Get","Command":"$_.RepositorySourceLocation"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":47,"Function":"Get","Command":"if ($Module)\r\n        {\r\n            $this.Name = $Module.Name\r\n            $this.RequiredVersion = $Module.Version\r\n            $this.Repository = $Module.RepositorySourceLocation\r\n        }\r\n        else\r\n        {\r\n            $this.Name = $null\r\n            $this.RequiredVersion = $null\r\n            $this.Repository = $null\r\n        }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":49,"Function":"Get","Command":"$this.Name = $Module.Name"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":50,"Function":"Get","Command":"$this.RequiredVersion = $Module.Version"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":51,"Function":"Get","Command":"$this.Repository = $Module.RepositorySourceLocation"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":55,"Function":"Get","Command":"$this.Name = $null"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":56,"Function":"Get","Command":"$this.RequiredVersion = $null"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":57,"Function":"Get","Command":"$this.Repository = $null"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":60,"Function":"Get","Command":"return $this"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":65,"Function":"Set","Command":"$PSBoundParameters = $this.GetPSBoundParameters()"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":66,"Function":"Set","Command":"$Modules = Get-Module -Name $this.Name -ListAvailable | Where-Object { $_.RepositorySourceLocation }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":66,"Function":"Set","Command":"$Modules = Get-Module -Name $this.Name -ListAvailable | Where-Object { $_.RepositorySourceLocation }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":66,"Function":"Set","Command":"$_.RepositorySourceLocation"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":68,"Function":"Set","Command":"if ($this.Ensure -eq [Ensure]::Present)\r\n        {\r\n            if (-not (Get-PackageProvider | Where-Object { $_.Name -eq \"NuGet\" -and $_.Version -ge \"2.8.5.201\" }))\r\n            {\r\n                Write-Verbose -Message \"Installing latest NuGet package provider in order to use Install-Module.\"\r\n                $null = Install-PackageProvider -Name NuGet -Scope AllUsers -MinimumVersion 2.8.5.201 -Force\r\n            }\r\n\r\n            if ($this.RequiredVersion -and ($Modules.Version -notcontains $this.RequiredVersion))\r\n            {\r\n                Write-Verbose -Message \"Installing module [$($this.Name)].\"\r\n                Install-Module @PSBoundParameters -Scope AllUsers -Force\r\n            }\r\n        }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":70,"Function":"Set","Command":"if (-not (Get-PackageProvider | Where-Object { $_.Name -eq \"NuGet\" -and $_.Version -ge \"2.8.5.201\" }))\r\n            {\r\n                Write-Verbose -Message \"Installing latest NuGet package provider in order to use Install-Module.\"\r\n                $null = Install-PackageProvider -Name NuGet -Scope AllUsers -MinimumVersion 2.8.5.201 -Force\r\n            }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":70,"Function":"Set","Command":"Get-PackageProvider"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":70,"Function":"Set","Command":"Where-Object { $_.Name -eq \"NuGet\" -and $_.Version -ge \"2.8.5.201\" }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":70,"Function":"Set","Command":"$_.Name -eq \"NuGet\" -and $_.Version -ge \"2.8.5.201\""},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":72,"Function":"Set","Command":"Write-Verbose -Message \"Installing latest NuGet package provider in order to use Install-Module.\""},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":73,"Function":"Set","Command":"$null = Install-PackageProvider -Name NuGet -Scope AllUsers -MinimumVersion 2.8.5.201 -Force"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":76,"Function":"Set","Command":"if ($this.RequiredVersion -and ($Modules.Version -notcontains $this.RequiredVersion))\r\n            {\r\n                Write-Verbose -Message \"Installing module [$($this.Name)].\"\r\n                Install-Module @PSBoundParameters -Scope AllUsers -Force\r\n            }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":76,"Function":"Set","Command":"$Modules.Version -notcontains $this.RequiredVersion"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":78,"Function":"Set","Command":"Write-Verbose -Message \"Installing module [$($this.Name)].\""},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":78,"Function":"Set","Command":"$this.Name"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":79,"Function":"Set","Command":"Install-Module @PSBoundParameters -Scope AllUsers -Force"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":83,"Function":"Set","Command":"$PSBoundParameters.Remove(\u0027Repository\u0027)"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":84,"Function":"Set","Command":"$Modules"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":86,"Function":"Set","Command":"if ($this.Ensure -eq [Ensure]::Present)\r\n            {\r\n                if ($Module.Version -ne $this.RequiredVersion)\r\n                {\r\n                    Write-Verbose -Message \"Removing side-by-side module [$($Module.Name)] with version [$($Module.Version)].\"\r\n                    Get-InstalledModule @PSBoundParameters | Uninstall-Module -Force\r\n                }\r\n            }\r\n            elseif ($this.Ensure -eq [Ensure]::Absent)\r\n            {\r\n                Write-Verbose -Message \"Removing module [$($Module.Name)].\"\r\n                Get-InstalledModule @PSBoundParameters | Uninstall-Module -Force\r\n            }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":88,"Function":"Set","Command":"if ($Module.Version -ne $this.RequiredVersion)\r\n                {\r\n                    Write-Verbose -Message \"Removing side-by-side module [$($Module.Name)] with version [$($Module.Version)].\"\r\n                    Get-InstalledModule @PSBoundParameters | Uninstall-Module -Force\r\n                }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":90,"Function":"Set","Command":"Write-Verbose -Message \"Removing side-by-side module [$($Module.Name)] with version [$($Module.Version)].\""},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":90,"Function":"Set","Command":"$Module.Name"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":90,"Function":"Set","Command":"$Module.Version"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":91,"Function":"Set","Command":"Get-InstalledModule @PSBoundParameters"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":91,"Function":"Set","Command":"Uninstall-Module -Force"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":94,"Function":"Set","Command":"if ($this.Ensure -eq [Ensure]::Present)\r\n            {\r\n                if ($Module.Version -ne $this.RequiredVersion)\r\n                {\r\n                    Write-Verbose -Message \"Removing side-by-side module [$($Module.Name)] with version [$($Module.Version)].\"\r\n                    Get-InstalledModule @PSBoundParameters | Uninstall-Module -Force\r\n                }\r\n            }\r\n            elseif ($this.Ensure -eq [Ensure]::Absent)\r\n            {\r\n                Write-Verbose -Message \"Removing module [$($Module.Name)].\"\r\n                Get-InstalledModule @PSBoundParameters | Uninstall-Module -Force\r\n            }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":96,"Function":"Set","Command":"Write-Verbose -Message \"Removing module [$($Module.Name)].\""},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":96,"Function":"Set","Command":"$Module.Name"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":97,"Function":"Set","Command":"Get-InstalledModule @PSBoundParameters"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":97,"Function":"Set","Command":"Uninstall-Module -Force"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":104,"Function":"Test","Command":"$Module = Get-Module -Name $this.Name -ListAvailable | Where-Object { $_.RepositorySourceLocation }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":104,"Function":"Test","Command":"$Module = Get-Module -Name $this.Name -ListAvailable | Where-Object { $_.RepositorySourceLocation }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":104,"Function":"Test","Command":"$_.RepositorySourceLocation"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":105,"Function":"Test","Command":"$Result = $true"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":107,"Function":"Test","Command":"if ($this.Ensure -eq [Ensure]::Present)\r\n        {\r\n            if ($Module.Count -ne 1)\r\n            {\r\n                Write-Verbose -Message \"Expected a single instance of module [$($this.Name)] but was [$($Module.Count)].\"\r\n                $Result = $false\r\n            }\r\n\r\n            if ($this.RequiredVersion -and ($Module.Version -ne $this.RequiredVersion))\r\n            {\r\n                Write-Verbose -Message \"Expected module version [$($this.RequiredVersion)] but was [$($Module.Version)].\"\r\n                $Result = $false\r\n            }\r\n\r\n            if ($Module.Name -ne $this.Name)\r\n            {\r\n                Write-Verbose -Message \"Expected module [$($this.Name)] but was [$($Module.Name)].\"\r\n                $Result = $false\r\n            }\r\n        }\r\n        elseif ($this.Ensure -eq [Ensure]::Absent)\r\n        {\r\n            if ($Module.Count -gt 0)\r\n            {\r\n                Write-Verbose -Message \"Expected no instances of module [$($this.Name)] but was [$($Module.Count)].\"\r\n                $Result = $false\r\n            }\r\n        }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":109,"Function":"Test","Command":"if ($Module.Count -ne 1)\r\n            {\r\n                Write-Verbose -Message \"Expected a single instance of module [$($this.Name)] but was [$($Module.Count)].\"\r\n                $Result = $false\r\n            }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":111,"Function":"Test","Command":"Write-Verbose -Message \"Expected a single instance of module [$($this.Name)] but was [$($Module.Count)].\""},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":111,"Function":"Test","Command":"$this.Name"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":111,"Function":"Test","Command":"$Module.Count"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":112,"Function":"Test","Command":"$Result = $false"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":115,"Function":"Test","Command":"if ($this.RequiredVersion -and ($Module.Version -ne $this.RequiredVersion))\r\n            {\r\n                Write-Verbose -Message \"Expected module version [$($this.RequiredVersion)] but was [$($Module.Version)].\"\r\n                $Result = $false\r\n            }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":115,"Function":"Test","Command":"$Module.Version -ne $this.RequiredVersion"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":117,"Function":"Test","Command":"Write-Verbose -Message \"Expected module version [$($this.RequiredVersion)] but was [$($Module.Version)].\""},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":117,"Function":"Test","Command":"$this.RequiredVersion"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":117,"Function":"Test","Command":"$Module.Version"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":118,"Function":"Test","Command":"$Result = $false"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":121,"Function":"Test","Command":"if ($Module.Name -ne $this.Name)\r\n            {\r\n                Write-Verbose -Message \"Expected module [$($this.Name)] but was [$($Module.Name)].\"\r\n                $Result = $false\r\n            }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":123,"Function":"Test","Command":"Write-Verbose -Message \"Expected module [$($this.Name)] but was [$($Module.Name)].\""},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":123,"Function":"Test","Command":"$this.Name"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":123,"Function":"Test","Command":"$Module.Name"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":124,"Function":"Test","Command":"$Result = $false"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":127,"Function":"Test","Command":"if ($this.Ensure -eq [Ensure]::Present)\r\n        {\r\n            if ($Module.Count -ne 1)\r\n            {\r\n                Write-Verbose -Message \"Expected a single instance of module [$($this.Name)] but was [$($Module.Count)].\"\r\n                $Result = $false\r\n            }\r\n\r\n            if ($this.RequiredVersion -and ($Module.Version -ne $this.RequiredVersion))\r\n            {\r\n                Write-Verbose -Message \"Expected module version [$($this.RequiredVersion)] but was [$($Module.Version)].\"\r\n                $Result = $false\r\n            }\r\n\r\n            if ($Module.Name -ne $this.Name)\r\n            {\r\n                Write-Verbose -Message \"Expected module [$($this.Name)] but was [$($Module.Name)].\"\r\n                $Result = $false\r\n            }\r\n        }\r\n        elseif ($this.Ensure -eq [Ensure]::Absent)\r\n        {\r\n            if ($Module.Count -gt 0)\r\n            {\r\n                Write-Verbose -Message \"Expected no instances of module [$($this.Name)] but was [$($Module.Count)].\"\r\n                $Result = $false\r\n            }\r\n        }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":129,"Function":"Test","Command":"if ($Module.Count -gt 0)\r\n            {\r\n                Write-Verbose -Message \"Expected no instances of module [$($this.Name)] but was [$($Module.Count)].\"\r\n                $Result = $false\r\n            }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":131,"Function":"Test","Command":"Write-Verbose -Message \"Expected no instances of module [$($this.Name)] but was [$($Module.Count)].\""},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":131,"Function":"Test","Command":"$this.Name"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":131,"Function":"Test","Command":"$Module.Count"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":132,"Function":"Test","Command":"$Result = $false"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":136,"Function":"Test","Command":"return $Result"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":142,"Function":"GetPSBoundParameters","Command":"$PSBoundParameters = @{\r\n            Name = $this.Name;\r\n            Repository = $this.Repository;\r\n        }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":143,"Function":"GetPSBoundParameters","Command":"Name = $this.Name"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":144,"Function":"GetPSBoundParameters","Command":"Repository = $this.Repository"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":147,"Function":"GetPSBoundParameters","Command":"if ($this.RequiredVersion)\r\n        {\r\n            $PSBoundParameters[\"RequiredVersion\"] = $this.RequiredVersion\r\n        }"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":149,"Function":"GetPSBoundParameters","Command":"$PSBoundParameters[\"RequiredVersion\"] = $this.RequiredVersion"},{"File":"C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1","Line":152,"Function":"GetPSBoundParameters","Command":"return $PSBoundParameters"}],"AnalyzedFiles":["C:\\projects\\psmodulesdsc\\DSCClassResources\\PowershellModule\\PowershellModule.psm1"]}}
