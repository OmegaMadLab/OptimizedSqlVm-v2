**********************
Windows PowerShell transcript start
Start time: 20181018175438
Username: User Manager\ContainerAdministrator
RunAs User: User Manager\ContainerAdministrator
Machine: 37C02CE8C7A3 (Microsoft Windows NT 10.0.14393.0)
Host Application: powershell.exe -ExecutionPolicy ByPass -EncodedCommand LgAgAEMAOgBcAFAAbwB3AGUAcgBzAGgAZQBsAGwATQBvAGQAdQBsAGUAXwBTAHQAYQByAHQAVABlAHMAdAAuAHAAcwAxAA==
Process ID: 4912
PSVersion: 5.1.14393.2312
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.14393.2312
BuildVersion: 10.0.14393.2312
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Transcript started, output file is C:\projects\psmodulesdsc\PowershellModule_Transcript.txt
[Build Info] [UTC 10/18/2018 17:54:38] Installing Pester.
[Build Info] [UTC 10/18/2018 17:54:59] Invoking pester on all tests in the path: C:\projects\psmodulesdsc\Tests\Unit\PowershellModule.tests.ps1
[Build Info] [UTC 10/18/2018 17:54:59] Using these files to calculate code coverage: C:\projects\psmodulesdsc\DSCClassResources\PowershellModule\PowershellModule.psm1
Executing all tests in 'C:\projects\psmodulesdsc\Tests\Unit\PowershellModule.tests.ps1'

Executing script C:\projects\psmodulesdsc\Tests\Unit\PowershellModule.tests.ps1

  Describing PowershellModule

    Context When the GetPSBoundParameters method is called
      [+] Should not throw
3.23s
      [+] Should be a hashtable
188ms
      [+] Should return the expected properties
60ms

    Context When the Get method is called
      [+] Should not throw
204ms
      [+] Should return a type of PowershellModule
95ms
      [+] Should call Get-Module one time
581ms
      [+] Should return null if module does not exist
102ms
      [+] Should return name and version if module does exist
67ms

    Context When the Test method is called
      [+] Should not throw
177ms
      [+] Should return a type of "boolean"
67ms

      Context Ensure = Present
        [+] Should return $false when module does not exist
109ms
        [+] Should return $false when module version is incorrect
305ms
        [+] Should return $false when module count is incorrect
67ms
        [+] Should return $true when module does exist
78ms

      Context Ensure = Absent
        [+] Should return $false when module does exist
56ms
        [+] Should return $true when module does not exist
22ms

    Context When the Set method is called
      [+] Should not throw
150ms
      [+] Should call Install-Module if Ensure is Present
211ms
      [+] Should call Install-PackageProvider if Ensure is Present and NuGet provider is missing
755ms
      [+] Should call Uninstall-Module and Install-Module if Ensure is Present and Version -lt desired
720ms
      [+] Should call Uninstall-Module and Install-Module if Ensure is Present and Version -gt desired
588ms
      [+] Should call Uninstall-Module if Ensure is Absent
67ms
Tests completed in 7.9s
Tests Passed: 22,
Failed: 0,
Skipped: 0,
Pending: 0,
Inconclusive: 0

Code coverage report:
Covered 100.00 % of 75 analyzed Commands in 1 File.
VERBOSE: Tests ran for 00:51 minutes.
**********************
Windows PowerShell transcript end
End time: 20181018175530
**********************
